{
  "id": "73b75a127ec635a37a56450a3c0b577a",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.27",
  "solcLongVersion": "0.8.27+commit.40a35a09",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "contracts/OpenLedger.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.27;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\n\n/**\n * @title Open Token\n * @dev Implementation of the Open Token with burning capability\n * @custom:security-contact security@Open.example.com\n */\ncontract Open is ERC20, ERC20Burnable {\n    /**\n     * @notice ERC20 Name of the token: Open\n     * @dev ERC20 function name() public view returns (string)\n     * @dev Field is declared public: getter name() is created when compiled,\n     *      it returns the name of the token.\n     */\n    string internal constant NAME = \"Open\";\n\n    /**\n     * @notice ERC20 Symbol of the token: OPEN\n     * @dev ERC20 function symbol() public view returns (string)\n     * @dev Field is declared public: getter symbol() is created when compiled,\n     *      it returns the symbol of the token\n     */\n    string internal constant SYMBOL = \"OPEN\";\n\n    /**\n     * @notice Creates `amount` tokens and assigns them to `recipient`, increasing the total supply\n     * @dev Sets the total supply to 1 billion tokens, all assigned to the deployer\n     * @param recipient The address that will receive the minted tokens\n     */\n    constructor(address recipient) ERC20(NAME, SYMBOL) {\n        _mint(recipient, 1_000_000_000 * 10 ** decimals());\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              136
            ],
            "IERC20Errors": [
              41
            ],
            "IERC721Errors": [
              89
            ]
          },
          "id": 137,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:0",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 41,
              "linearizedBaseContracts": [
                41
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:0",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 11,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "654:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 7,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "670:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "687:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:0"
                  },
                  "src": "623:80:0"
                },
                {
                  "documentation": {
                    "id": 12,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:0",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 16,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "891:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:0"
                  },
                  "src": "866:41:0"
                },
                {
                  "documentation": {
                    "id": 17,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:0",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 21,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 20,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 21,
                        "src": "1104:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:0"
                  },
                  "src": "1077:45:0"
                },
                {
                  "documentation": {
                    "id": 22,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:0",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 30,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 24,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "1511:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 26,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "1528:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 28,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "1547:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:0"
                  },
                  "src": "1478:85:0"
                },
                {
                  "documentation": {
                    "id": 31,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:0",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 35,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 33,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "1775:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:0"
                  },
                  "src": "1748:45:0"
                },
                {
                  "documentation": {
                    "id": 36,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:0",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 40,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 39,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 38,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "2025:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:0"
                  },
                  "src": "1999:43:0"
                }
              ],
              "scope": 137,
              "src": "280:1764:0",
              "usedErrors": [
                11,
                16,
                21,
                30,
                35,
                40
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 42,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:0",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 89,
              "linearizedBaseContracts": [
                89
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 43,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:0",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 47,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 45,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 47,
                        "src": "2469:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:0"
                  },
                  "src": "2444:40:0"
                },
                {
                  "documentation": {
                    "id": 48,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:0",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 52,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 50,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 52,
                        "src": "2656:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:0"
                  },
                  "src": "2627:46:0"
                },
                {
                  "documentation": {
                    "id": 53,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:0",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 61,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 55,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 61,
                        "src": "3000:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 54,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 57,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 61,
                        "src": "3016:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 56,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 59,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 61,
                        "src": "3033:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:0"
                  },
                  "src": "2973:75:0"
                },
                {
                  "documentation": {
                    "id": 62,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:0",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 66,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 64,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "3237:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 63,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:0"
                  },
                  "src": "3211:42:0"
                },
                {
                  "documentation": {
                    "id": 67,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:0",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 71,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 69,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 71,
                        "src": "3451:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 68,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:0"
                  },
                  "src": "3423:46:0"
                },
                {
                  "documentation": {
                    "id": 72,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:0",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 78,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 77,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 74,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "3760:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 76,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "3778:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:0"
                  },
                  "src": "3727:68:0"
                },
                {
                  "documentation": {
                    "id": 79,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:0",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 83,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 82,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 81,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "4008:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 80,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:0"
                  },
                  "src": "3980:46:0"
                },
                {
                  "documentation": {
                    "id": 84,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:0",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 88,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "4262:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:0"
                  },
                  "src": "4234:46:0"
                }
              ],
              "scope": 137,
              "src": "2190:2092:0",
              "usedErrors": [
                47,
                52,
                61,
                66,
                71,
                78,
                83,
                88
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 90,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:0",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 136,
              "linearizedBaseContracts": [
                136
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 91,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:0",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 101,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 93,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4860:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 95,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4876:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 94,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 97,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4893:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 99,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4909:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:0"
                  },
                  "src": "4827:99:0"
                },
                {
                  "documentation": {
                    "id": 102,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:0",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 106,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 104,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "5116:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:0"
                  },
                  "src": "5089:43:0"
                },
                {
                  "documentation": {
                    "id": 107,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:0",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 111,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "5331:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:0"
                  },
                  "src": "5302:47:0"
                },
                {
                  "documentation": {
                    "id": 112,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:0",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 118,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 114,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "5651:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "5669:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:0"
                  },
                  "src": "5616:68:0"
                },
                {
                  "documentation": {
                    "id": 119,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:0",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 123,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 123,
                        "src": "5898:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:0"
                  },
                  "src": "5869:47:0"
                },
                {
                  "documentation": {
                    "id": 124,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:0",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 128,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 126,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "6153:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:0"
                  },
                  "src": "6124:47:0"
                },
                {
                  "documentation": {
                    "id": 129,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:0",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 135,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "6494:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "6513:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:0"
                  },
                  "src": "6462:73:0"
                }
              ],
              "scope": 137,
              "src": "4430:2107:0",
              "usedErrors": [
                101,
                106,
                111,
                118,
                123,
                128,
                135
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              831
            ],
            "ERC20": [
              651
            ],
            "IERC20": [
              729
            ],
            "IERC20Errors": [
              41
            ],
            "IERC20Metadata": [
              801
            ]
          },
          "id": 652,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 138,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 140,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 730,
              "src": "131:36:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 139,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 729,
                    "src": "139:6:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 142,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 802,
              "src": "168:63:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 141,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 801,
                    "src": "176:14:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 144,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 832,
              "src": "232:48:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 143,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 831,
                    "src": "240:7:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 146,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 137,
              "src": "281:65:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 145,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41,
                    "src": "289:12:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 148,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 831,
                    "src": "1133:7:1"
                  },
                  "id": 149,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:1"
                },
                {
                  "baseName": {
                    "id": 150,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 729,
                    "src": "1142:6:1"
                  },
                  "id": 151,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:1"
                },
                {
                  "baseName": {
                    "id": 152,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 801,
                    "src": "1150:14:1"
                  },
                  "id": 153,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:1"
                },
                {
                  "baseName": {
                    "id": 154,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 41,
                    "src": "1166:12:1"
                  },
                  "id": 155,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:1"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 147,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:1",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 651,
              "linearizedBaseContracts": [
                651,
                41,
                801,
                729,
                831
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1185:53:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 158,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:1",
                    "keyType": {
                      "id": 156,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 157,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1245:83:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 164,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:1",
                    "keyType": {
                      "id": 160,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 163,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:1",
                      "keyType": {
                        "id": 161,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1335:28:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1370:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1396:22:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 187,
                    "nodeType": "Block",
                    "src": "1638:57:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 179,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "1648:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 180,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "1656:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 182,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:1"
                      },
                      {
                        "expression": {
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 183,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "1671:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 184,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "1681:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 172,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:1",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 188,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "1594:19:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "1615:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:1"
                  },
                  "returnParameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:1"
                  },
                  "scope": 651,
                  "src": "1582:113:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    788
                  ],
                  "body": {
                    "id": 196,
                    "nodeType": "Block",
                    "src": "1820:29:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 194,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 169,
                          "src": "1837:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 193,
                        "id": 195,
                        "nodeType": "Return",
                        "src": "1830:12:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 189,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:1",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 197,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:1"
                  },
                  "returnParameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "1805:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:1"
                  },
                  "scope": 651,
                  "src": "1760:89:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    794
                  ],
                  "body": {
                    "id": 205,
                    "nodeType": "Block",
                    "src": "2024:31:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 203,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "2041:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 202,
                        "id": 204,
                        "nodeType": "Return",
                        "src": "2034:14:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 198,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:1",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 206,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:1"
                  },
                  "returnParameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "2009:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:1"
                  },
                  "scope": 651,
                  "src": "1962:93:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    800
                  ],
                  "body": {
                    "id": 214,
                    "nodeType": "Block",
                    "src": "2744:26:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 211,
                        "id": 213,
                        "nodeType": "Return",
                        "src": "2754:9:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 207,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:1",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 215,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:1"
                  },
                  "returnParameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "2737:5:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:1"
                  },
                  "scope": 651,
                  "src": "2688:82:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    678
                  ],
                  "body": {
                    "id": 223,
                    "nodeType": "Block",
                    "src": "2891:36:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 221,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "2908:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 220,
                        "id": 222,
                        "nodeType": "Return",
                        "src": "2901:19:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 216,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:49:1",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 224,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2839:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2850:2:1"
                  },
                  "returnParameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2882:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2881:9:1"
                  },
                  "scope": 651,
                  "src": "2830:97:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    686
                  ],
                  "body": {
                    "id": 236,
                    "nodeType": "Block",
                    "src": "3059:42:1",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 232,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "3076:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 234,
                          "indexExpression": {
                            "id": 233,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "3086:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3076:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 231,
                        "id": 235,
                        "nodeType": "Return",
                        "src": "3069:25:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 225,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:47:1",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 237,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2994:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3012:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "3004:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:17:1"
                  },
                  "returnParameters": {
                    "id": 231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 230,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "3050:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 229,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3050:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3049:9:1"
                  },
                  "scope": 651,
                  "src": "2985:116:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    696
                  ],
                  "body": {
                    "id": 260,
                    "nodeType": "Block",
                    "src": "3371:103:1",
                    "statements": [
                      {
                        "assignments": [
                          248
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 248,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3389:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 260,
                            "src": "3381:13:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 247,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3381:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 251,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 249,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 813,
                            "src": "3397:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3381:28:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 253,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "3429:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 254,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 240,
                              "src": "3436:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 255,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 242,
                              "src": "3440:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 252,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "3419:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3419:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 257,
                        "nodeType": "ExpressionStatement",
                        "src": "3419:27:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3463:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 246,
                        "id": 259,
                        "nodeType": "Return",
                        "src": "3456:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 238,
                    "nodeType": "StructuredDocumentation",
                    "src": "3107:184:1",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 261,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3305:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3322:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3314:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3334:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3326:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:27:1"
                  },
                  "returnParameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3365:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3365:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3364:6:1"
                  },
                  "scope": 651,
                  "src": "3296:178:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    706
                  ],
                  "body": {
                    "id": 277,
                    "nodeType": "Block",
                    "src": "3621:51:1",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 271,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "3638:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 273,
                            "indexExpression": {
                              "id": 272,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 264,
                              "src": "3650:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 275,
                          "indexExpression": {
                            "id": 274,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "3657:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3638:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 270,
                        "id": 276,
                        "nodeType": "Return",
                        "src": "3631:34:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 262,
                    "nodeType": "StructuredDocumentation",
                    "src": "3480:47:1",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 278,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3541:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3559:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3551:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3551:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3574:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3566:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3550:32:1"
                  },
                  "returnParameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3612:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3612:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3611:9:1"
                  },
                  "scope": 651,
                  "src": "3532:140:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    716
                  ],
                  "body": {
                    "id": 301,
                    "nodeType": "Block",
                    "src": "4058:107:1",
                    "statements": [
                      {
                        "assignments": [
                          289
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 289,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4076:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 301,
                            "src": "4068:13:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 288,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4068:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 292,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 290,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 813,
                            "src": "4084:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4068:28:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 294,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 289,
                              "src": "4115:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 295,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "4122:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 296,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "4131:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 293,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              542,
                              602
                            ],
                            "referencedDeclaration": 542,
                            "src": "4106:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 298,
                        "nodeType": "ExpressionStatement",
                        "src": "4106:31:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4154:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 287,
                        "id": 300,
                        "nodeType": "Return",
                        "src": "4147:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 279,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:296:1",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 302,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3988:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4004:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "3996:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3996:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4021:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "4013:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3995:32:1"
                  },
                  "returnParameters": {
                    "id": 287,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 286,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "4052:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4052:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4051:6:1"
                  },
                  "scope": 651,
                  "src": "3979:186:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    728
                  ],
                  "body": {
                    "id": 333,
                    "nodeType": "Block",
                    "src": "4850:151:1",
                    "statements": [
                      {
                        "assignments": [
                          315
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 315,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4868:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 333,
                            "src": "4860:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 314,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4860:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 318,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 316,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 813,
                            "src": "4878:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4860:30:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 320,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "4916:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 321,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "4922:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 322,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "4931:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 319,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "4900:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4900:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 324,
                        "nodeType": "ExpressionStatement",
                        "src": "4900:37:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 326,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "4957:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 327,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 307,
                              "src": "4963:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 328,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "4967:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 325,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "4947:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:26:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4990:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 313,
                        "id": 332,
                        "nodeType": "Return",
                        "src": "4983:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 303,
                    "nodeType": "StructuredDocumentation",
                    "src": "4171:581:1",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 334,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4766:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4787:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4779:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 307,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4801:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4793:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 306,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 309,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4813:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4805:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4805:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:41:1"
                  },
                  "returnParameters": {
                    "id": 313,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 312,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4844:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4844:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4843:6:1"
                  },
                  "scope": 651,
                  "src": "4757:244:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 380,
                    "nodeType": "Block",
                    "src": "5443:231:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 344,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "5457:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5473:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5465:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 345,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5465:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5457:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 358,
                        "nodeType": "IfStatement",
                        "src": "5453:86:1",
                        "trueBody": {
                          "id": 357,
                          "nodeType": "Block",
                          "src": "5477:62:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 353,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5525:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 352,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5517:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 351,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5517:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 354,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5517:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 350,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "5498:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5498:30:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 356,
                              "nodeType": "RevertStatement",
                              "src": "5491:37:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 359,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 339,
                            "src": "5552:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5566:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5558:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 360,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5558:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5558:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5552:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 373,
                        "nodeType": "IfStatement",
                        "src": "5548:86:1",
                        "trueBody": {
                          "id": 372,
                          "nodeType": "Block",
                          "src": "5570:64:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 368,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5620:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 367,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5612:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 366,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5612:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 369,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5612:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 365,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "5591:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 371,
                              "nodeType": "RevertStatement",
                              "src": "5584:39:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 375,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "5651:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 376,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "5657:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 377,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "5661:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 374,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "5643:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5643:24:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 379,
                        "nodeType": "ExpressionStatement",
                        "src": "5643:24:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 335,
                    "nodeType": "StructuredDocumentation",
                    "src": "5007:362:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 381,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5383:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 337,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5401:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "5393:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5415:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "5407:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5427:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "5419:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5419:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5392:41:1"
                  },
                  "returnParameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5443:0:1"
                  },
                  "scope": 651,
                  "src": "5374:300:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 457,
                    "nodeType": "Block",
                    "src": "6064:1032:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 391,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "6078:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6094:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6086:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 392,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6086:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6086:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6078:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 428,
                          "nodeType": "Block",
                          "src": "6252:362:1",
                          "statements": [
                            {
                              "assignments": [
                                403
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 403,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6274:11:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 428,
                                  "src": "6266:19:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 402,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6266:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 407,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 404,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 159,
                                  "src": "6288:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 406,
                                "indexExpression": {
                                  "id": 405,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 384,
                                  "src": "6298:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6288:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6266:37:1"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 408,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "6321:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 409,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 388,
                                  "src": "6335:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6321:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 418,
                              "nodeType": "IfStatement",
                              "src": "6317:115:1",
                              "trueBody": {
                                "id": 417,
                                "nodeType": "Block",
                                "src": "6342:90:1",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 412,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 384,
                                          "src": "6392:4:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 413,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 403,
                                          "src": "6398:11:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 414,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 388,
                                          "src": "6411:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 411,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11,
                                        "src": "6367:24:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 415,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6367:50:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 416,
                                    "nodeType": "RevertStatement",
                                    "src": "6360:57:1"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 427,
                              "nodeType": "UncheckedBlock",
                              "src": "6445:159:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 425,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 419,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 159,
                                        "src": "6552:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 421,
                                      "indexExpression": {
                                        "id": 420,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 384,
                                        "src": "6562:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6552:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 424,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 422,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 403,
                                        "src": "6570:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 423,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 388,
                                        "src": "6584:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6570:19:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6552:37:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 426,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6552:37:1"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 429,
                        "nodeType": "IfStatement",
                        "src": "6074:540:1",
                        "trueBody": {
                          "id": 401,
                          "nodeType": "Block",
                          "src": "6098:148:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 397,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 167,
                                  "src": "6214:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 398,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 388,
                                  "src": "6230:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6214:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 400,
                              "nodeType": "ExpressionStatement",
                              "src": "6214:21:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 430,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 386,
                            "src": "6628:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6634:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 431,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6634:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6634:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6628:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 449,
                          "nodeType": "Block",
                          "src": "6843:206:1",
                          "statements": [
                            {
                              "id": 448,
                              "nodeType": "UncheckedBlock",
                              "src": "6857:182:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 442,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 159,
                                        "src": "7002:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 444,
                                      "indexExpression": {
                                        "id": 443,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 386,
                                        "src": "7012:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7002:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 445,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 388,
                                      "src": "7019:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7002:22:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 447,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7002:22:1"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 450,
                        "nodeType": "IfStatement",
                        "src": "6624:425:1",
                        "trueBody": {
                          "id": 441,
                          "nodeType": "Block",
                          "src": "6646:191:1",
                          "statements": [
                            {
                              "id": 440,
                              "nodeType": "UncheckedBlock",
                              "src": "6660:167:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 438,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 436,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 167,
                                      "src": "6791:12:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 437,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 388,
                                      "src": "6807:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6791:21:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 439,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6791:21:1"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 452,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "7073:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 453,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 386,
                              "src": "7079:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 454,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "7083:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 451,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "7064:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7064:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 456,
                        "nodeType": "EmitStatement",
                        "src": "7059:30:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 382,
                    "nodeType": "StructuredDocumentation",
                    "src": "5680:304:1",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 458,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5998:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6014:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "6006:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6006:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 386,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6028:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "6020:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 385,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6020:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6040:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "6032:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6032:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6005:41:1"
                  },
                  "returnParameters": {
                    "id": 390,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6064:0:1"
                  },
                  "scope": 651,
                  "src": "5989:1107:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 490,
                    "nodeType": "Block",
                    "src": "7495:152:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 466,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 461,
                            "src": "7509:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7528:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7520:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 467,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7520:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7520:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7509:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 480,
                        "nodeType": "IfStatement",
                        "src": "7505:91:1",
                        "trueBody": {
                          "id": 479,
                          "nodeType": "Block",
                          "src": "7532:64:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 475,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7582:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 474,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7574:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 473,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7574:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 476,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7574:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 472,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "7553:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7553:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 478,
                              "nodeType": "RevertStatement",
                              "src": "7546:39:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7621:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7613:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 482,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7613:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7613:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 486,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 461,
                              "src": "7625:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 487,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "7634:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 481,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "7605:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7605:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 489,
                        "nodeType": "ExpressionStatement",
                        "src": "7605:35:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 459,
                    "nodeType": "StructuredDocumentation",
                    "src": "7102:332:1",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 491,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7448:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 461,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7462:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "7454:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7454:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7479:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "7471:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7471:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7453:32:1"
                  },
                  "returnParameters": {
                    "id": 465,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7495:0:1"
                  },
                  "scope": 651,
                  "src": "7439:208:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 523,
                    "nodeType": "Block",
                    "src": "8021:150:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 499,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 494,
                            "src": "8035:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8054:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8046:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 500,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8046:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8046:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8035:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 513,
                        "nodeType": "IfStatement",
                        "src": "8031:89:1",
                        "trueBody": {
                          "id": 512,
                          "nodeType": "Block",
                          "src": "8058:62:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 508,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8106:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 507,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8098:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 506,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8098:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 509,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8098:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 505,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "8079:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8079:30:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 511,
                              "nodeType": "RevertStatement",
                              "src": "8072:37:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 515,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 494,
                              "src": "8137:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 518,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8154:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8146:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 516,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8146:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8146:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 520,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "8158:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 514,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "8129:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8129:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 522,
                        "nodeType": "ExpressionStatement",
                        "src": "8129:35:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 492,
                    "nodeType": "StructuredDocumentation",
                    "src": "7653:307:1",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 524,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7974:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 494,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7988:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "7980:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 493,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7980:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 496,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8005:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "7997:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 495,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7997:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7979:32:1"
                  },
                  "returnParameters": {
                    "id": 498,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8021:0:1"
                  },
                  "scope": 651,
                  "src": "7965:206:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 541,
                    "nodeType": "Block",
                    "src": "8781:54:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 535,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "8800:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 536,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 529,
                              "src": "8807:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 537,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "8816:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8823:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 534,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              542,
                              602
                            ],
                            "referencedDeclaration": 602,
                            "src": "8791:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 540,
                        "nodeType": "ExpressionStatement",
                        "src": "8791:37:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 525,
                    "nodeType": "StructuredDocumentation",
                    "src": "8177:525:1",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 542,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8716:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 532,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 527,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8733:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "8725:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 526,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8725:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 529,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8748:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "8740:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 528,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8740:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 531,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8765:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "8757:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 530,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8757:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8724:47:1"
                  },
                  "returnParameters": {
                    "id": 533,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8781:0:1"
                  },
                  "scope": 651,
                  "src": "8707:128:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 601,
                    "nodeType": "Block",
                    "src": "9780:334:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 554,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 545,
                            "src": "9794:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9811:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9803:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 555,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9803:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9803:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9794:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 568,
                        "nodeType": "IfStatement",
                        "src": "9790:89:1",
                        "trueBody": {
                          "id": 567,
                          "nodeType": "Block",
                          "src": "9815:64:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 563,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9865:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 562,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9857:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 561,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9857:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 564,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9857:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 560,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "9836:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9836:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 566,
                              "nodeType": "RevertStatement",
                              "src": "9829:39:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 569,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 547,
                            "src": "9892:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9911:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9903:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 570,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9903:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9903:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9892:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 583,
                        "nodeType": "IfStatement",
                        "src": "9888:90:1",
                        "trueBody": {
                          "id": 582,
                          "nodeType": "Block",
                          "src": "9915:63:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 578,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9964:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 577,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9956:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 576,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9956:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 579,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9956:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 575,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "9936:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9936:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 581,
                              "nodeType": "RevertStatement",
                              "src": "9929:38:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 584,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 165,
                                "src": "9987:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 587,
                              "indexExpression": {
                                "id": 585,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 545,
                                "src": "9999:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9987:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 588,
                            "indexExpression": {
                              "id": 586,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "10006:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9987:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 589,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 549,
                            "src": "10017:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9987:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 591,
                        "nodeType": "ExpressionStatement",
                        "src": "9987:35:1"
                      },
                      {
                        "condition": {
                          "id": 592,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 551,
                          "src": "10036:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 600,
                        "nodeType": "IfStatement",
                        "src": "10032:76:1",
                        "trueBody": {
                          "id": 599,
                          "nodeType": "Block",
                          "src": "10047:61:1",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 594,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 545,
                                    "src": "10075:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 595,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 547,
                                    "src": "10082:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 596,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 549,
                                    "src": "10091:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 593,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 672,
                                  "src": "10066:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10066:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 598,
                              "nodeType": "EmitStatement",
                              "src": "10061:36:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 543,
                    "nodeType": "StructuredDocumentation",
                    "src": "8841:836:1",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 602,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9691:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 552,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 545,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9708:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9700:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 544,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9700:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 547,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9723:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9715:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 546,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9715:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 549,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9740:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9732:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 548,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9732:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 551,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9752:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9747:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9747:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9699:63:1"
                  },
                  "returnParameters": {
                    "id": 553,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9780:0:1"
                  },
                  "scope": 651,
                  "src": "9682:432:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 649,
                    "nodeType": "Block",
                    "src": "10485:387:1",
                    "statements": [
                      {
                        "assignments": [
                          613
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 613,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10503:16:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 649,
                            "src": "10495:24:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 612,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10495:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 618,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 615,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 605,
                              "src": "10532:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 616,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "10539:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 614,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "10522:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10522:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10495:52:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 619,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "10561:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 622,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10585:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 621,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10585:7:1",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 620,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10580:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10580:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10594:3:1",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10580:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10561:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 648,
                        "nodeType": "IfStatement",
                        "src": "10557:309:1",
                        "trueBody": {
                          "id": 647,
                          "nodeType": "Block",
                          "src": "10599:267:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 628,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 626,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 613,
                                  "src": "10617:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 627,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 609,
                                  "src": "10636:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10617:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 636,
                              "nodeType": "IfStatement",
                              "src": "10613:130:1",
                              "trueBody": {
                                "id": 635,
                                "nodeType": "Block",
                                "src": "10643:100:1",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 630,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 607,
                                          "src": "10695:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 631,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 613,
                                          "src": "10704:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 632,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 609,
                                          "src": "10722:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 629,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 30,
                                        "src": "10668:26:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 633,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10668:60:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 634,
                                    "nodeType": "RevertStatement",
                                    "src": "10661:67:1"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 646,
                              "nodeType": "UncheckedBlock",
                              "src": "10756:100:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 638,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 605,
                                        "src": "10793:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 639,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 607,
                                        "src": "10800:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 642,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 640,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 613,
                                          "src": "10809:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 641,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 609,
                                          "src": "10828:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10809:24:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 643,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10835:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 637,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        542,
                                        602
                                      ],
                                      "referencedDeclaration": 602,
                                      "src": "10784:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 644,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10784:57:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 645,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10784:57:1"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 603,
                    "nodeType": "StructuredDocumentation",
                    "src": "10120:271:1",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 650,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10405:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 610,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 605,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10429:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "10421:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 604,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10421:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 607,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10444:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "10436:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10436:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10461:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "10453:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10453:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10420:47:1"
                  },
                  "returnParameters": {
                    "id": 611,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10485:0:1"
                  },
                  "scope": 651,
                  "src": "10396:476:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 652,
              "src": "1106:9768:1",
              "usedErrors": [
                11,
                16,
                21,
                30,
                35,
                40
              ],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "105:10770:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              729
            ]
          },
          "id": 730,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 653,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 654,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:2",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 729,
              "linearizedBaseContracts": [
                729
              ],
              "name": "IERC20",
              "nameLocation": "214:6:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 655,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:2",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 663,
                  "name": "Transfer",
                  "nameLocation": "396:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 662,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 657,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "405:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 659,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "427:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 661,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "447:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:2"
                  },
                  "src": "390:72:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 664,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:2",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 672,
                  "name": "Approval",
                  "nameLocation": "627:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 671,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 666,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "636:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 665,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 668,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "659:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 667,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 670,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "684:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 669,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:2"
                  },
                  "src": "621:78:2"
                },
                {
                  "documentation": {
                    "id": 673,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:2",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 678,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 674,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:2"
                  },
                  "returnParameters": {
                    "id": 677,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 676,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 678,
                        "src": "821:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 675,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:2"
                  },
                  "scope": 729,
                  "src": "775:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 679,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:2",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 686,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 682,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 686,
                        "src": "931:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:2"
                  },
                  "returnParameters": {
                    "id": 685,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 686,
                        "src": "971:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:2"
                  },
                  "scope": 729,
                  "src": "912:68:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 687,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:2",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 696,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 692,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 689,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "1222:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 688,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 691,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "1234:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:2"
                  },
                  "returnParameters": {
                    "id": 695,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 694,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "1267:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:2"
                  },
                  "scope": 729,
                  "src": "1204:69:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 697,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:2",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 706,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 702,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "1567:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "1582:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:2"
                  },
                  "returnParameters": {
                    "id": 705,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 704,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "1622:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 703,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:2"
                  },
                  "scope": 729,
                  "src": "1548:83:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 707,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:2",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 716,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 712,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 709,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 716,
                        "src": "2326:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 708,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 711,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 716,
                        "src": "2343:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 710,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:2"
                  },
                  "returnParameters": {
                    "id": 715,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 714,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 716,
                        "src": "2376:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 713,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:2"
                  },
                  "scope": 729,
                  "src": "2309:73:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 717,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:2",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 728,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 724,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 719,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2712:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 718,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 721,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2726:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 720,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 723,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2738:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:2"
                  },
                  "returnParameters": {
                    "id": 727,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 726,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2771:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 725,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:2"
                  },
                  "scope": 729,
                  "src": "2690:87:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 730,
              "src": "204:2575:2",
              "usedErrors": [],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "106:2674:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
          "exportedSymbols": {
            "Context": [
              831
            ],
            "ERC20": [
              651
            ],
            "ERC20Burnable": [
              775
            ]
          },
          "id": 776,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 731,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "124:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "../ERC20.sol",
              "id": 733,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 776,
              "sourceUnit": 652,
              "src": "150:35:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 732,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 651,
                    "src": "158:5:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../../utils/Context.sol",
              "id": 735,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 776,
              "sourceUnit": 832,
              "src": "186:51:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 734,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 831,
                    "src": "194:7:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 737,
                    "name": "Context",
                    "nameLocations": [
                      "483:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 831,
                    "src": "483:7:3"
                  },
                  "id": 738,
                  "nodeType": "InheritanceSpecifier",
                  "src": "483:7:3"
                },
                {
                  "baseName": {
                    "id": 739,
                    "name": "ERC20",
                    "nameLocations": [
                      "492:5:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 651,
                    "src": "492:5:3"
                  },
                  "id": 740,
                  "nodeType": "InheritanceSpecifier",
                  "src": "492:5:3"
                }
              ],
              "canonicalName": "ERC20Burnable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 736,
                "nodeType": "StructuredDocumentation",
                "src": "239:208:3",
                "text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
              },
              "fullyImplemented": true,
              "id": 775,
              "linearizedBaseContracts": [
                775,
                651,
                41,
                801,
                729,
                831
              ],
              "name": "ERC20Burnable",
              "nameLocation": "466:13:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 752,
                    "nodeType": "Block",
                    "src": "662:43:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 747,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 813,
                                "src": "678:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "678:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 749,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 743,
                              "src": "692:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 746,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "672:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "672:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 751,
                        "nodeType": "ExpressionStatement",
                        "src": "672:26:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 741,
                    "nodeType": "StructuredDocumentation",
                    "src": "504:109:3",
                    "text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
                  },
                  "functionSelector": "42966c68",
                  "id": 753,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "627:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 744,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 743,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "640:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "632:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 742,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "631:15:3"
                  },
                  "returnParameters": {
                    "id": 745,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "662:0:3"
                  },
                  "scope": 775,
                  "src": "618:87:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 773,
                    "nodeType": "Block",
                    "src": "1086:93:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 762,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "1112:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 763,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 813,
                                "src": "1121:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1121:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 765,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "1135:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 761,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "1096:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1096:45:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 767,
                        "nodeType": "ExpressionStatement",
                        "src": "1096:45:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 769,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "1157:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 770,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "1166:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 768,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "1151:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1151:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 772,
                        "nodeType": "ExpressionStatement",
                        "src": "1151:21:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 754,
                    "nodeType": "StructuredDocumentation",
                    "src": "711:305:3",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "79cc6790",
                  "id": 774,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnFrom",
                  "nameLocation": "1030:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 756,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1047:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 774,
                        "src": "1039:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 755,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1039:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 758,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1064:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 774,
                        "src": "1056:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 757,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1038:32:3"
                  },
                  "returnParameters": {
                    "id": 760,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1086:0:3"
                  },
                  "scope": 775,
                  "src": "1021:158:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 776,
              "src": "448:733:3",
              "usedErrors": [
                11,
                16,
                21,
                30,
                35,
                40
              ],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "124:1058:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              729
            ],
            "IERC20Metadata": [
              801
            ]
          },
          "id": 802,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 777,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 779,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 802,
              "sourceUnit": 730,
              "src": "151:37:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 778,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 729,
                    "src": "159:6:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 781,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 729,
                    "src": "306:6:4"
                  },
                  "id": 782,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:4"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 780,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:4",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 801,
              "linearizedBaseContracts": [
                801,
                729
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 783,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:4",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 788,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 784,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:4"
                  },
                  "returnParameters": {
                    "id": 787,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 786,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 788,
                        "src": "417:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 785,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:4"
                  },
                  "scope": 801,
                  "src": "378:54:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 789,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:4",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 794,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 790,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:4"
                  },
                  "returnParameters": {
                    "id": 793,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 792,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 794,
                        "src": "540:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 791,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:4"
                  },
                  "scope": 801,
                  "src": "499:56:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 795,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:4",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 800,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 796,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:4"
                  },
                  "returnParameters": {
                    "id": 799,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 798,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 800,
                        "src": "674:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 797,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:4"
                  },
                  "scope": 801,
                  "src": "631:50:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 802,
              "src": "278:405:4",
              "usedErrors": [],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "125:559:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              831
            ]
          },
          "id": 832,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 803,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 804,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 831,
              "linearizedBaseContracts": [
                831
              ],
              "name": "Context",
              "nameLocation": "642:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 812,
                    "nodeType": "Block",
                    "src": "718:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 809,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 808,
                        "id": 811,
                        "nodeType": "Return",
                        "src": "728:17:5"
                      }
                    ]
                  },
                  "id": 813,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 805,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:5"
                  },
                  "returnParameters": {
                    "id": 808,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 807,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 813,
                        "src": "709:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:5"
                  },
                  "scope": 831,
                  "src": "656:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 821,
                    "nodeType": "Block",
                    "src": "825:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 818,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:5",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 817,
                        "id": 820,
                        "nodeType": "Return",
                        "src": "835:15:5"
                      }
                    ]
                  },
                  "id": 822,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 814,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:5"
                  },
                  "returnParameters": {
                    "id": 817,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 816,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 822,
                        "src": "809:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 815,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:5"
                  },
                  "scope": 831,
                  "src": "758:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 829,
                    "nodeType": "Block",
                    "src": "935:25:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 826,
                        "id": 828,
                        "nodeType": "Return",
                        "src": "945:8:5"
                      }
                    ]
                  },
                  "id": 830,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 823,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:5"
                  },
                  "returnParameters": {
                    "id": 826,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 825,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 830,
                        "src": "926:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 824,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:5"
                  },
                  "scope": 831,
                  "src": "863:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 832,
              "src": "624:338:5",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:5"
        },
        "id": 5
      },
      "contracts/OpenLedger.sol": {
        "ast": {
          "absolutePath": "contracts/OpenLedger.sol",
          "exportedSymbols": {
            "ERC20": [
              651
            ],
            "ERC20Burnable": [
              775
            ],
            "Open": [
              872
            ]
          },
          "id": 873,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 833,
              "literals": [
                "solidity",
                "0.8",
                ".27"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 835,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 873,
              "sourceUnit": 652,
              "src": "58:68:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 834,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 651,
                    "src": "66:5:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "id": 837,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 873,
              "sourceUnit": 776,
              "src": "127:95:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 836,
                    "name": "ERC20Burnable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 775,
                    "src": "135:13:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 839,
                    "name": "ERC20",
                    "nameLocations": [
                      "389:5:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 651,
                    "src": "389:5:6"
                  },
                  "id": 840,
                  "nodeType": "InheritanceSpecifier",
                  "src": "389:5:6"
                },
                {
                  "baseName": {
                    "id": 841,
                    "name": "ERC20Burnable",
                    "nameLocations": [
                      "396:13:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 775,
                    "src": "396:13:6"
                  },
                  "id": 842,
                  "nodeType": "InheritanceSpecifier",
                  "src": "396:13:6"
                }
              ],
              "canonicalName": "Open",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 838,
                "nodeType": "StructuredDocumentation",
                "src": "224:147:6",
                "text": " @title Open Token\n @dev Implementation of the Open Token with burning capability\n @custom:security-contact security@Open.example.com"
              },
              "fullyImplemented": true,
              "id": 872,
              "linearizedBaseContracts": [
                872,
                775,
                651,
                41,
                801,
                729,
                831
              ],
              "name": "Open",
              "nameLocation": "381:4:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "documentation": {
                    "id": 843,
                    "nodeType": "StructuredDocumentation",
                    "src": "416:243:6",
                    "text": " @notice ERC20 Name of the token: Open\n @dev ERC20 function name() public view returns (string)\n @dev Field is declared public: getter name() is created when compiled,\n      it returns the name of the token."
                  },
                  "id": 846,
                  "mutability": "constant",
                  "name": "NAME",
                  "nameLocation": "689:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "664:38:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4f70656e",
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "696:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                      "typeString": "literal_string \"Open\""
                    },
                    "value": "Open"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 847,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:250:6",
                    "text": " @notice ERC20 Symbol of the token: OPEN\n @dev ERC20 function symbol() public view returns (string)\n @dev Field is declared public: getter symbol() is created when compiled,\n      it returns the symbol of the token"
                  },
                  "id": 850,
                  "mutability": "constant",
                  "name": "SYMBOL",
                  "nameLocation": "989:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "964:40:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4f50454e",
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "998:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f76fe33b8a0ebf7aa05740f479d10138c7c15bdc75b10e047cc15be2be15e5b4",
                      "typeString": "literal_string \"OPEN\""
                    },
                    "value": "OPEN"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 870,
                    "nodeType": "Block",
                    "src": "1334:67:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 861,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 853,
                              "src": "1350:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "315f3030305f3030305f303030",
                                "id": 862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1361:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000_by_1",
                                  "typeString": "int_const 1000000000"
                                },
                                "value": "1_000_000_000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1377:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 864,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 215,
                                    "src": "1383:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view returns (uint8)"
                                    }
                                  },
                                  "id": 865,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1383:10:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1377:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1361:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 860,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "1344:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1344:50:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 869,
                        "nodeType": "ExpressionStatement",
                        "src": "1344:50:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 851,
                    "nodeType": "StructuredDocumentation",
                    "src": "1011:267:6",
                    "text": " @notice Creates `amount` tokens and assigns them to `recipient`, increasing the total supply\n @dev Sets the total supply to 1 billion tokens, all assigned to the deployer\n @param recipient The address that will receive the minted tokens"
                  },
                  "id": 871,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 856,
                          "name": "NAME",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 846,
                          "src": "1320:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 857,
                          "name": "SYMBOL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 850,
                          "src": "1326:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "id": 858,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 855,
                        "name": "ERC20",
                        "nameLocations": [
                          "1314:5:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 651,
                        "src": "1314:5:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1314:19:6"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 854,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 853,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "1303:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 871,
                        "src": "1295:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 852,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1295:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1294:19:6"
                  },
                  "returnParameters": {
                    "id": 859,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1334:0:6"
                  },
                  "scope": 872,
                  "src": "1283:118:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 873,
              "src": "372:1031:6",
              "usedErrors": [
                11,
                16,
                21,
                30,
                35,
                40
              ],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "33:1371:6"
        },
        "id": 6
      }
    },
    "contracts": {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ERC20Burnable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "contracts/OpenLedger.sol": {
        "Open": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_188": {
                  "entryPoint": null,
                  "id": 188,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_871": {
                  "entryPoint": null,
                  "id": 871,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_mint_491": {
                  "entryPoint": 195,
                  "id": 491,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_update_458": {
                  "entryPoint": 258,
                  "id": 458,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@decimals_215": {
                  "entryPoint": 190,
                  "id": 215,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address_fromMemory": {
                  "entryPoint": 556,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 1246,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 975,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint8": {
                  "entryPoint": 1208,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 1042,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 1223,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 684,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 763,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 626,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 953,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 604,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:5554:7",
                    "nodeType": "YulBlock",
                    "src": "0:5554:7",
                    "statements": [
                      {
                        "nativeSrc": "6:3:7",
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "95:209:7",
                          "nodeType": "YulBlock",
                          "src": "95:209:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "141:16:7",
                                "nodeType": "YulBlock",
                                "src": "141:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "150:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "150:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "153:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "153:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "143:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "143:6:7"
                                      },
                                      "nativeSrc": "143:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "143:12:7"
                                    },
                                    "nativeSrc": "143:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "143:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "116:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "116:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "125:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "112:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:7"
                                    },
                                    "nativeSrc": "112:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "137:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "137:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "108:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:7"
                                },
                                "nativeSrc": "108:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "108:32:7"
                              },
                              "nativeSrc": "105:52:7",
                              "nodeType": "YulIf",
                              "src": "105:52:7"
                            },
                            {
                              "nativeSrc": "166:29:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "166:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "185:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "185:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "179:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "179:5:7"
                                },
                                "nativeSrc": "179:16:7",
                                "nodeType": "YulFunctionCall",
                                "src": "179:16:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "170:5:7",
                                  "nodeType": "YulTypedName",
                                  "src": "170:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "258:16:7",
                                "nodeType": "YulBlock",
                                "src": "258:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "267:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "267:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "270:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "270:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "260:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "260:6:7"
                                      },
                                      "nativeSrc": "260:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "260:12:7"
                                    },
                                    "nativeSrc": "260:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "260:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "217:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "217:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "228:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "228:5:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "243:3:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "243:3:7",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "248:1:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "248:1:7",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "239:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "239:3:7"
                                                },
                                                "nativeSrc": "239:11:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "239:11:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "252:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "252:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "235:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "235:3:7"
                                            },
                                            "nativeSrc": "235:19:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "235:19:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "224:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "224:3:7"
                                        },
                                        "nativeSrc": "224:31:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "224:31:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "214:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "214:2:7"
                                    },
                                    "nativeSrc": "214:42:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "214:42:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "207:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "207:6:7"
                                },
                                "nativeSrc": "207:50:7",
                                "nodeType": "YulFunctionCall",
                                "src": "207:50:7"
                              },
                              "nativeSrc": "204:70:7",
                              "nodeType": "YulIf",
                              "src": "204:70:7"
                            },
                            {
                              "nativeSrc": "283:15:7",
                              "nodeType": "YulAssignment",
                              "src": "283:15:7",
                              "value": {
                                "name": "value",
                                "nativeSrc": "293:5:7",
                                "nodeType": "YulIdentifier",
                                "src": "293:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "283:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "283:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nativeSrc": "14:290:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "61:9:7",
                            "nodeType": "YulTypedName",
                            "src": "61:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "72:7:7",
                            "nodeType": "YulTypedName",
                            "src": "72:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "84:6:7",
                            "nodeType": "YulTypedName",
                            "src": "84:6:7",
                            "type": ""
                          }
                        ],
                        "src": "14:290:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "341:95:7",
                          "nodeType": "YulBlock",
                          "src": "341:95:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "358:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "358:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "365:3:7",
                                        "nodeType": "YulLiteral",
                                        "src": "365:3:7",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "370:10:7",
                                        "nodeType": "YulLiteral",
                                        "src": "370:10:7",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "361:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "361:3:7"
                                    },
                                    "nativeSrc": "361:20:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "361:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "351:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "351:6:7"
                                },
                                "nativeSrc": "351:31:7",
                                "nodeType": "YulFunctionCall",
                                "src": "351:31:7"
                              },
                              "nativeSrc": "351:31:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "351:31:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "398:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "398:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "401:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "401:4:7",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "391:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "391:6:7"
                                },
                                "nativeSrc": "391:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "391:15:7"
                              },
                              "nativeSrc": "391:15:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "391:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "422:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "422:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "425:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "425:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "415:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "415:6:7"
                                },
                                "nativeSrc": "415:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "415:15:7"
                              },
                              "nativeSrc": "415:15:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "415:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nativeSrc": "309:127:7",
                        "nodeType": "YulFunctionDefinition",
                        "src": "309:127:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "496:325:7",
                          "nodeType": "YulBlock",
                          "src": "496:325:7",
                          "statements": [
                            {
                              "nativeSrc": "506:22:7",
                              "nodeType": "YulAssignment",
                              "src": "506:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "520:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "520:1:7",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nativeSrc": "523:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "523:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nativeSrc": "516:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "516:3:7"
                                },
                                "nativeSrc": "516:12:7",
                                "nodeType": "YulFunctionCall",
                                "src": "516:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "506:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "506:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "537:38:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "537:38:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "567:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "567:4:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "573:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "573:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "563:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "563:3:7"
                                },
                                "nativeSrc": "563:12:7",
                                "nodeType": "YulFunctionCall",
                                "src": "563:12:7"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "541:18:7",
                                  "nodeType": "YulTypedName",
                                  "src": "541:18:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "614:31:7",
                                "nodeType": "YulBlock",
                                "src": "614:31:7",
                                "statements": [
                                  {
                                    "nativeSrc": "616:27:7",
                                    "nodeType": "YulAssignment",
                                    "src": "616:27:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nativeSrc": "630:6:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "630:6:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "638:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "638:4:7",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "626:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "626:3:7"
                                      },
                                      "nativeSrc": "626:17:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "626:17:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "616:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "616:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "594:18:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "594:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "587:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "587:6:7"
                                },
                                "nativeSrc": "587:26:7",
                                "nodeType": "YulFunctionCall",
                                "src": "587:26:7"
                              },
                              "nativeSrc": "584:61:7",
                              "nodeType": "YulIf",
                              "src": "584:61:7"
                            },
                            {
                              "body": {
                                "nativeSrc": "704:111:7",
                                "nodeType": "YulBlock",
                                "src": "704:111:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "725:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "725:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "732:3:7",
                                              "nodeType": "YulLiteral",
                                              "src": "732:3:7",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "737:10:7",
                                              "nodeType": "YulLiteral",
                                              "src": "737:10:7",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "728:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "728:3:7"
                                          },
                                          "nativeSrc": "728:20:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "728:20:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "718:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "718:6:7"
                                      },
                                      "nativeSrc": "718:31:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "718:31:7"
                                    },
                                    "nativeSrc": "718:31:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "718:31:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "769:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "769:1:7",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "772:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "772:4:7",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "762:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "762:6:7"
                                      },
                                      "nativeSrc": "762:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "762:15:7"
                                    },
                                    "nativeSrc": "762:15:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "762:15:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "797:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "797:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "800:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "800:4:7",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "790:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "790:6:7"
                                      },
                                      "nativeSrc": "790:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "790:15:7"
                                    },
                                    "nativeSrc": "790:15:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "790:15:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "660:18:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "660:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "683:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "683:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "691:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "691:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "680:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "680:2:7"
                                    },
                                    "nativeSrc": "680:14:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "680:14:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "657:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "657:2:7"
                                },
                                "nativeSrc": "657:38:7",
                                "nodeType": "YulFunctionCall",
                                "src": "657:38:7"
                              },
                              "nativeSrc": "654:161:7",
                              "nodeType": "YulIf",
                              "src": "654:161:7"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nativeSrc": "441:380:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "476:4:7",
                            "nodeType": "YulTypedName",
                            "src": "476:4:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "485:6:7",
                            "nodeType": "YulTypedName",
                            "src": "485:6:7",
                            "type": ""
                          }
                        ],
                        "src": "441:380:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "882:65:7",
                          "nodeType": "YulBlock",
                          "src": "882:65:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "899:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "899:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nativeSrc": "902:3:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "902:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "892:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "892:6:7"
                                },
                                "nativeSrc": "892:14:7",
                                "nodeType": "YulFunctionCall",
                                "src": "892:14:7"
                              },
                              "nativeSrc": "892:14:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "892:14:7"
                            },
                            {
                              "nativeSrc": "915:26:7",
                              "nodeType": "YulAssignment",
                              "src": "915:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "933:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "933:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "936:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "936:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nativeSrc": "923:9:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "923:9:7"
                                },
                                "nativeSrc": "923:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "923:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nativeSrc": "915:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "915:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_string_storage",
                        "nativeSrc": "826:121:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nativeSrc": "865:3:7",
                            "nodeType": "YulTypedName",
                            "src": "865:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nativeSrc": "873:4:7",
                            "nodeType": "YulTypedName",
                            "src": "873:4:7",
                            "type": ""
                          }
                        ],
                        "src": "826:121:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1033:437:7",
                          "nodeType": "YulBlock",
                          "src": "1033:437:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1066:398:7",
                                "nodeType": "YulBlock",
                                "src": "1066:398:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1087:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "1087:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "name": "array",
                                          "nativeSrc": "1090:5:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "1090:5:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "1080:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1080:6:7"
                                      },
                                      "nativeSrc": "1080:16:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1080:16:7"
                                    },
                                    "nativeSrc": "1080:16:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1080:16:7"
                                  },
                                  {
                                    "nativeSrc": "1109:30:7",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1109:30:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1131:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "1131:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1134:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "1134:4:7",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nativeSrc": "1121:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1121:9:7"
                                      },
                                      "nativeSrc": "1121:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1121:18:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "1113:4:7",
                                        "nodeType": "YulTypedName",
                                        "src": "1113:4:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "1152:57:7",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1152:57:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "1175:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "1175:4:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1185:1:7",
                                              "nodeType": "YulLiteral",
                                              "src": "1185:1:7",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "startIndex",
                                                  "nativeSrc": "1192:10:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1192:10:7"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "1204:2:7",
                                                  "nodeType": "YulLiteral",
                                                  "src": "1204:2:7",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "1188:3:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "1188:3:7"
                                              },
                                              "nativeSrc": "1188:19:7",
                                              "nodeType": "YulFunctionCall",
                                              "src": "1188:19:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "1181:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "1181:3:7"
                                          },
                                          "nativeSrc": "1181:27:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1181:27:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "1171:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1171:3:7"
                                      },
                                      "nativeSrc": "1171:38:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1171:38:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nativeSrc": "1156:11:7",
                                        "nodeType": "YulTypedName",
                                        "src": "1156:11:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "1246:23:7",
                                      "nodeType": "YulBlock",
                                      "src": "1246:23:7",
                                      "statements": [
                                        {
                                          "nativeSrc": "1248:19:7",
                                          "nodeType": "YulAssignment",
                                          "src": "1248:19:7",
                                          "value": {
                                            "name": "data",
                                            "nativeSrc": "1263:4:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "1263:4:7"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nativeSrc": "1248:11:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "1248:11:7"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nativeSrc": "1228:10:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "1228:10:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1240:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "1240:4:7",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "1225:2:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1225:2:7"
                                      },
                                      "nativeSrc": "1225:20:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1225:20:7"
                                    },
                                    "nativeSrc": "1222:47:7",
                                    "nodeType": "YulIf",
                                    "src": "1222:47:7"
                                  },
                                  {
                                    "nativeSrc": "1282:41:7",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1282:41:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "1296:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "1296:4:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1306:1:7",
                                              "nodeType": "YulLiteral",
                                              "src": "1306:1:7",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nativeSrc": "1313:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1313:3:7"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "1318:2:7",
                                                  "nodeType": "YulLiteral",
                                                  "src": "1318:2:7",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "1309:3:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "1309:3:7"
                                              },
                                              "nativeSrc": "1309:12:7",
                                              "nodeType": "YulFunctionCall",
                                              "src": "1309:12:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "1302:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "1302:3:7"
                                          },
                                          "nativeSrc": "1302:20:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1302:20:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "1292:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1292:3:7"
                                      },
                                      "nativeSrc": "1292:31:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1292:31:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nativeSrc": "1286:2:7",
                                        "nodeType": "YulTypedName",
                                        "src": "1286:2:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "1336:24:7",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1336:24:7",
                                    "value": {
                                      "name": "deleteStart",
                                      "nativeSrc": "1349:11:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1349:11:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "start",
                                        "nativeSrc": "1340:5:7",
                                        "nodeType": "YulTypedName",
                                        "src": "1340:5:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "1434:20:7",
                                      "nodeType": "YulBlock",
                                      "src": "1434:20:7",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "1443:5:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "1443:5:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1450:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "1450:1:7",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nativeSrc": "1436:6:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "1436:6:7"
                                            },
                                            "nativeSrc": "1436:16:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1436:16:7"
                                          },
                                          "nativeSrc": "1436:16:7",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "1436:16:7"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nativeSrc": "1384:5:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "1384:5:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nativeSrc": "1391:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "1391:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "1381:2:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1381:2:7"
                                      },
                                      "nativeSrc": "1381:13:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1381:13:7"
                                    },
                                    "nativeSrc": "1373:81:7",
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nativeSrc": "1395:26:7",
                                      "nodeType": "YulBlock",
                                      "src": "1395:26:7",
                                      "statements": [
                                        {
                                          "nativeSrc": "1397:22:7",
                                          "nodeType": "YulAssignment",
                                          "src": "1397:22:7",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "1410:5:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "1410:5:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1417:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "1417:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "1406:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "1406:3:7"
                                            },
                                            "nativeSrc": "1406:13:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1406:13:7"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "start",
                                              "nativeSrc": "1397:5:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "1397:5:7"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nativeSrc": "1377:3:7",
                                      "nodeType": "YulBlock",
                                      "src": "1377:3:7",
                                      "statements": []
                                    },
                                    "src": "1373:81:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nativeSrc": "1049:3:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1049:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1054:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1054:2:7",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1046:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1046:2:7"
                                },
                                "nativeSrc": "1046:11:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1046:11:7"
                              },
                              "nativeSrc": "1043:421:7",
                              "nodeType": "YulIf",
                              "src": "1043:421:7"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nativeSrc": "952:518:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nativeSrc": "1005:5:7",
                            "nodeType": "YulTypedName",
                            "src": "1005:5:7",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "1012:3:7",
                            "nodeType": "YulTypedName",
                            "src": "1012:3:7",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nativeSrc": "1017:10:7",
                            "nodeType": "YulTypedName",
                            "src": "1017:10:7",
                            "type": ""
                          }
                        ],
                        "src": "952:518:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1560:81:7",
                          "nodeType": "YulBlock",
                          "src": "1560:81:7",
                          "statements": [
                            {
                              "nativeSrc": "1570:65:7",
                              "nodeType": "YulAssignment",
                              "src": "1570:65:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "1585:4:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1585:4:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1603:1:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1603:1:7",
                                                    "type": "",
                                                    "value": "3"
                                                  },
                                                  {
                                                    "name": "len",
                                                    "nativeSrc": "1606:3:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1606:3:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "1599:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1599:3:7"
                                                },
                                                "nativeSrc": "1599:11:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1599:11:7"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1616:1:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1616:1:7",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nativeSrc": "1612:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1612:3:7"
                                                },
                                                "nativeSrc": "1612:6:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1612:6:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nativeSrc": "1595:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "1595:3:7"
                                            },
                                            "nativeSrc": "1595:24:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1595:24:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "1591:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "1591:3:7"
                                        },
                                        "nativeSrc": "1591:29:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1591:29:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1581:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1581:3:7"
                                    },
                                    "nativeSrc": "1581:40:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1581:40:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1627:1:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1627:1:7",
                                        "type": "",
                                        "value": "1"
                                      },
                                      {
                                        "name": "len",
                                        "nativeSrc": "1630:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1630:3:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "1623:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1623:3:7"
                                    },
                                    "nativeSrc": "1623:11:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1623:11:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "1578:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1578:2:7"
                                },
                                "nativeSrc": "1578:57:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1578:57:7"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nativeSrc": "1570:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1570:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nativeSrc": "1475:166:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "1537:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1537:4:7",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "1543:3:7",
                            "nodeType": "YulTypedName",
                            "src": "1543:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nativeSrc": "1551:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1551:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1475:166:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1742:1203:7",
                          "nodeType": "YulBlock",
                          "src": "1742:1203:7",
                          "statements": [
                            {
                              "nativeSrc": "1752:24:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1752:24:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nativeSrc": "1772:3:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1772:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1766:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1766:5:7"
                                },
                                "nativeSrc": "1766:10:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1766:10:7"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nativeSrc": "1756:6:7",
                                  "nodeType": "YulTypedName",
                                  "src": "1756:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1819:22:7",
                                "nodeType": "YulBlock",
                                "src": "1819:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "1821:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1821:16:7"
                                      },
                                      "nativeSrc": "1821:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1821:18:7"
                                    },
                                    "nativeSrc": "1821:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1821:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "1791:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1791:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1807:2:7",
                                            "nodeType": "YulLiteral",
                                            "src": "1807:2:7",
                                            "type": "",
                                            "value": "64"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1811:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "1811:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "1803:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "1803:3:7"
                                        },
                                        "nativeSrc": "1803:10:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1803:10:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1815:1:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1815:1:7",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1799:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1799:3:7"
                                    },
                                    "nativeSrc": "1799:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1799:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1788:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1788:2:7"
                                },
                                "nativeSrc": "1788:30:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1788:30:7"
                              },
                              "nativeSrc": "1785:56:7",
                              "nodeType": "YulIf",
                              "src": "1785:56:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nativeSrc": "1894:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1894:4:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nativeSrc": "1932:4:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "1932:4:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nativeSrc": "1926:5:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "1926:5:7"
                                        },
                                        "nativeSrc": "1926:11:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1926:11:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nativeSrc": "1900:25:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1900:25:7"
                                    },
                                    "nativeSrc": "1900:38:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1900:38:7"
                                  },
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "1940:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1940:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nativeSrc": "1850:43:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1850:43:7"
                                },
                                "nativeSrc": "1850:97:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1850:97:7"
                              },
                              "nativeSrc": "1850:97:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1850:97:7"
                            },
                            {
                              "nativeSrc": "1956:18:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1956:18:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1973:1:7",
                                "nodeType": "YulLiteral",
                                "src": "1973:1:7",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "1960:9:7",
                                  "nodeType": "YulTypedName",
                                  "src": "1960:9:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1983:17:7",
                              "nodeType": "YulAssignment",
                              "src": "1983:17:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1996:4:7",
                                "nodeType": "YulLiteral",
                                "src": "1996:4:7",
                                "type": "",
                                "value": "0x20"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "1983:9:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1983:9:7"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "2046:642:7",
                                    "nodeType": "YulBlock",
                                    "src": "2046:642:7",
                                    "statements": [
                                      {
                                        "nativeSrc": "2060:35:7",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "2060:35:7",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "2079:6:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "2079:6:7"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "2091:2:7",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2091:2:7",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nativeSrc": "2087:3:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "2087:3:7"
                                              },
                                              "nativeSrc": "2087:7:7",
                                              "nodeType": "YulFunctionCall",
                                              "src": "2087:7:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nativeSrc": "2075:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "2075:3:7"
                                          },
                                          "nativeSrc": "2075:20:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2075:20:7"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nativeSrc": "2064:7:7",
                                            "nodeType": "YulTypedName",
                                            "src": "2064:7:7",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "2108:49:7",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "2108:49:7",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "2152:4:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "2152:4:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nativeSrc": "2122:29:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "2122:29:7"
                                          },
                                          "nativeSrc": "2122:35:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2122:35:7"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nativeSrc": "2112:6:7",
                                            "nodeType": "YulTypedName",
                                            "src": "2112:6:7",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "2170:10:7",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "2170:10:7",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "2179:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2179:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nativeSrc": "2174:1:7",
                                            "nodeType": "YulTypedName",
                                            "src": "2174:1:7",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "2250:165:7",
                                          "nodeType": "YulBlock",
                                          "src": "2250:165:7",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "2275:6:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2275:6:7"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nativeSrc": "2293:3:7",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "2293:3:7"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nativeSrc": "2298:9:7",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "2298:9:7"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nativeSrc": "2289:3:7",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "2289:3:7"
                                                        },
                                                        "nativeSrc": "2289:19:7",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "2289:19:7"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nativeSrc": "2283:5:7",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2283:5:7"
                                                    },
                                                    "nativeSrc": "2283:26:7",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2283:26:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "2268:6:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2268:6:7"
                                                },
                                                "nativeSrc": "2268:42:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2268:42:7"
                                              },
                                              "nativeSrc": "2268:42:7",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "2268:42:7"
                                            },
                                            {
                                              "nativeSrc": "2327:24:7",
                                              "nodeType": "YulAssignment",
                                              "src": "2327:24:7",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "2341:6:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2341:6:7"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "2349:1:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2349:1:7",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "2337:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2337:3:7"
                                                },
                                                "nativeSrc": "2337:14:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2337:14:7"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nativeSrc": "2327:6:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2327:6:7"
                                                }
                                              ]
                                            },
                                            {
                                              "nativeSrc": "2368:33:7",
                                              "nodeType": "YulAssignment",
                                              "src": "2368:33:7",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nativeSrc": "2385:9:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2385:9:7"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "2396:4:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2396:4:7",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "2381:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2381:3:7"
                                                },
                                                "nativeSrc": "2381:20:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2381:20:7"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nativeSrc": "2368:9:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2368:9:7"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nativeSrc": "2204:1:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "2204:1:7"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "2207:7:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "2207:7:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "2201:2:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "2201:2:7"
                                          },
                                          "nativeSrc": "2201:14:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2201:14:7"
                                        },
                                        "nativeSrc": "2193:222:7",
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nativeSrc": "2216:21:7",
                                          "nodeType": "YulBlock",
                                          "src": "2216:21:7",
                                          "statements": [
                                            {
                                              "nativeSrc": "2218:17:7",
                                              "nodeType": "YulAssignment",
                                              "src": "2218:17:7",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nativeSrc": "2227:1:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2227:1:7"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "2230:4:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2230:4:7",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "2223:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2223:3:7"
                                                },
                                                "nativeSrc": "2223:12:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2223:12:7"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "2218:1:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2218:1:7"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nativeSrc": "2197:3:7",
                                          "nodeType": "YulBlock",
                                          "src": "2197:3:7",
                                          "statements": []
                                        },
                                        "src": "2193:222:7"
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "2463:166:7",
                                          "nodeType": "YulBlock",
                                          "src": "2463:166:7",
                                          "statements": [
                                            {
                                              "nativeSrc": "2481:43:7",
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "2481:43:7",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "2508:3:7",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2508:3:7"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "2513:9:7",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2513:9:7"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "2504:3:7",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2504:3:7"
                                                    },
                                                    "nativeSrc": "2504:19:7",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2504:19:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "2498:5:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2498:5:7"
                                                },
                                                "nativeSrc": "2498:26:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2498:26:7"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nativeSrc": "2485:9:7",
                                                  "nodeType": "YulTypedName",
                                                  "src": "2485:9:7",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "2548:6:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2548:6:7"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nativeSrc": "2560:9:7",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2560:9:7"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nativeSrc": "2587:1:7",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "2587:1:7",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nativeSrc": "2590:6:7",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2590:6:7"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nativeSrc": "2583:3:7",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "2583:3:7"
                                                                    },
                                                                    "nativeSrc": "2583:14:7",
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2583:14:7"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "2599:3:7",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "2599:3:7",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nativeSrc": "2579:3:7",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "2579:3:7"
                                                                },
                                                                "nativeSrc": "2579:24:7",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "2579:24:7"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "2609:1:7",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "2609:1:7",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nativeSrc": "2605:3:7",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "2605:3:7"
                                                                },
                                                                "nativeSrc": "2605:6:7",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "2605:6:7"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nativeSrc": "2575:3:7",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "2575:3:7"
                                                            },
                                                            "nativeSrc": "2575:37:7",
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2575:37:7"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nativeSrc": "2571:3:7",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "2571:3:7"
                                                        },
                                                        "nativeSrc": "2571:42:7",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "2571:42:7"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nativeSrc": "2556:3:7",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2556:3:7"
                                                    },
                                                    "nativeSrc": "2556:58:7",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2556:58:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "2541:6:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2541:6:7"
                                                },
                                                "nativeSrc": "2541:74:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2541:74:7"
                                              },
                                              "nativeSrc": "2541:74:7",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "2541:74:7"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "2434:7:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "2434:7:7"
                                            },
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "2443:6:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "2443:6:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "2431:2:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "2431:2:7"
                                          },
                                          "nativeSrc": "2431:19:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2431:19:7"
                                        },
                                        "nativeSrc": "2428:201:7",
                                        "nodeType": "YulIf",
                                        "src": "2428:201:7"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "2649:4:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "2649:4:7"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nativeSrc": "2663:1:7",
                                                      "nodeType": "YulLiteral",
                                                      "src": "2663:1:7",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nativeSrc": "2666:6:7",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2666:6:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nativeSrc": "2659:3:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2659:3:7"
                                                  },
                                                  "nativeSrc": "2659:14:7",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2659:14:7"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "2675:1:7",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2675:1:7",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "2655:3:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "2655:3:7"
                                              },
                                              "nativeSrc": "2655:22:7",
                                              "nodeType": "YulFunctionCall",
                                              "src": "2655:22:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "2642:6:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "2642:6:7"
                                          },
                                          "nativeSrc": "2642:36:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2642:36:7"
                                        },
                                        "nativeSrc": "2642:36:7",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2642:36:7"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "2039:649:7",
                                  "nodeType": "YulCase",
                                  "src": "2039:649:7",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "2044:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2044:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "2705:234:7",
                                    "nodeType": "YulBlock",
                                    "src": "2705:234:7",
                                    "statements": [
                                      {
                                        "nativeSrc": "2719:14:7",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "2719:14:7",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "2732:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2732:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "2723:5:7",
                                            "nodeType": "YulTypedName",
                                            "src": "2723:5:7",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "2768:67:7",
                                          "nodeType": "YulBlock",
                                          "src": "2768:67:7",
                                          "statements": [
                                            {
                                              "nativeSrc": "2786:35:7",
                                              "nodeType": "YulAssignment",
                                              "src": "2786:35:7",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "2805:3:7",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2805:3:7"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "2810:9:7",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2810:9:7"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "2801:3:7",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2801:3:7"
                                                    },
                                                    "nativeSrc": "2801:19:7",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2801:19:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "2795:5:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2795:5:7"
                                                },
                                                "nativeSrc": "2795:26:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2795:26:7"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "2786:5:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2786:5:7"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nativeSrc": "2749:6:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "2749:6:7"
                                        },
                                        "nativeSrc": "2746:89:7",
                                        "nodeType": "YulIf",
                                        "src": "2746:89:7"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "2855:4:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "2855:4:7"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "2914:5:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2914:5:7"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nativeSrc": "2921:6:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2921:6:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nativeSrc": "2861:52:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "2861:52:7"
                                              },
                                              "nativeSrc": "2861:67:7",
                                              "nodeType": "YulFunctionCall",
                                              "src": "2861:67:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "2848:6:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "2848:6:7"
                                          },
                                          "nativeSrc": "2848:81:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2848:81:7"
                                        },
                                        "nativeSrc": "2848:81:7",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2848:81:7"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "2697:242:7",
                                  "nodeType": "YulCase",
                                  "src": "2697:242:7",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "2019:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2019:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2027:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2027:2:7",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "2016:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2016:2:7"
                                },
                                "nativeSrc": "2016:14:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2016:14:7"
                              },
                              "nativeSrc": "2009:930:7",
                              "nodeType": "YulSwitch",
                              "src": "2009:930:7"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nativeSrc": "1646:1299:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nativeSrc": "1727:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1727:4:7",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nativeSrc": "1733:3:7",
                            "nodeType": "YulTypedName",
                            "src": "1733:3:7",
                            "type": ""
                          }
                        ],
                        "src": "1646:1299:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "2982:95:7",
                          "nodeType": "YulBlock",
                          "src": "2982:95:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2999:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2999:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3006:3:7",
                                        "nodeType": "YulLiteral",
                                        "src": "3006:3:7",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3011:10:7",
                                        "nodeType": "YulLiteral",
                                        "src": "3011:10:7",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "3002:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3002:3:7"
                                    },
                                    "nativeSrc": "3002:20:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3002:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2992:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2992:6:7"
                                },
                                "nativeSrc": "2992:31:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2992:31:7"
                              },
                              "nativeSrc": "2992:31:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "2992:31:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3039:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3039:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3042:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3042:4:7",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3032:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3032:6:7"
                                },
                                "nativeSrc": "3032:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3032:15:7"
                              },
                              "nativeSrc": "3032:15:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "3032:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3063:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3063:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3066:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3066:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "3056:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3056:6:7"
                                },
                                "nativeSrc": "3056:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3056:15:7"
                              },
                              "nativeSrc": "3056:15:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "3056:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nativeSrc": "2950:127:7",
                        "nodeType": "YulFunctionDefinition",
                        "src": "2950:127:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "3151:306:7",
                          "nodeType": "YulBlock",
                          "src": "3151:306:7",
                          "statements": [
                            {
                              "nativeSrc": "3161:10:7",
                              "nodeType": "YulAssignment",
                              "src": "3161:10:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3170:1:7",
                                "nodeType": "YulLiteral",
                                "src": "3170:1:7",
                                "type": "",
                                "value": "1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "3161:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3161:5:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3180:13:7",
                              "nodeType": "YulAssignment",
                              "src": "3180:13:7",
                              "value": {
                                "name": "_base",
                                "nativeSrc": "3188:5:7",
                                "nodeType": "YulIdentifier",
                                "src": "3188:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nativeSrc": "3180:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3180:4:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3238:213:7",
                                "nodeType": "YulBlock",
                                "src": "3238:213:7",
                                "statements": [
                                  {
                                    "body": {
                                      "nativeSrc": "3280:22:7",
                                      "nodeType": "YulBlock",
                                      "src": "3280:22:7",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nativeSrc": "3282:16:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3282:16:7"
                                            },
                                            "nativeSrc": "3282:18:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3282:18:7"
                                          },
                                          "nativeSrc": "3282:18:7",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "3282:18:7"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "3258:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3258:4:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "max",
                                              "nativeSrc": "3268:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3268:3:7"
                                            },
                                            {
                                              "name": "base",
                                              "nativeSrc": "3273:4:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3273:4:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nativeSrc": "3264:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3264:3:7"
                                          },
                                          "nativeSrc": "3264:14:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3264:14:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nativeSrc": "3255:2:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3255:2:7"
                                      },
                                      "nativeSrc": "3255:24:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3255:24:7"
                                    },
                                    "nativeSrc": "3252:50:7",
                                    "nodeType": "YulIf",
                                    "src": "3252:50:7"
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "3335:29:7",
                                      "nodeType": "YulBlock",
                                      "src": "3335:29:7",
                                      "statements": [
                                        {
                                          "nativeSrc": "3337:25:7",
                                          "nodeType": "YulAssignment",
                                          "src": "3337:25:7",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nativeSrc": "3350:5:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "3350:5:7"
                                              },
                                              {
                                                "name": "base",
                                                "nativeSrc": "3357:4:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "3357:4:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nativeSrc": "3346:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3346:3:7"
                                            },
                                            "nativeSrc": "3346:16:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3346:16:7"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nativeSrc": "3337:5:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3337:5:7"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "3322:8:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3322:8:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3332:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3332:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "3318:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3318:3:7"
                                      },
                                      "nativeSrc": "3318:16:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3318:16:7"
                                    },
                                    "nativeSrc": "3315:49:7",
                                    "nodeType": "YulIf",
                                    "src": "3315:49:7"
                                  },
                                  {
                                    "nativeSrc": "3377:23:7",
                                    "nodeType": "YulAssignment",
                                    "src": "3377:23:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "3389:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3389:4:7"
                                        },
                                        {
                                          "name": "base",
                                          "nativeSrc": "3395:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3395:4:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nativeSrc": "3385:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3385:3:7"
                                      },
                                      "nativeSrc": "3385:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3385:15:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nativeSrc": "3377:4:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3377:4:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3413:28:7",
                                    "nodeType": "YulAssignment",
                                    "src": "3413:28:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3429:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3429:1:7",
                                          "type": "",
                                          "value": "1"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "3432:8:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3432:8:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nativeSrc": "3425:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3425:3:7"
                                      },
                                      "nativeSrc": "3425:16:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3425:16:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nativeSrc": "3413:8:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3413:8:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "3213:8:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3213:8:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3223:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3223:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3210:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3210:2:7"
                                },
                                "nativeSrc": "3210:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3210:15:7"
                              },
                              "nativeSrc": "3202:249:7",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "3226:3:7",
                                "nodeType": "YulBlock",
                                "src": "3226:3:7",
                                "statements": []
                              },
                              "pre": {
                                "nativeSrc": "3206:3:7",
                                "nodeType": "YulBlock",
                                "src": "3206:3:7",
                                "statements": []
                              },
                              "src": "3202:249:7"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nativeSrc": "3082:375:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_base",
                            "nativeSrc": "3110:5:7",
                            "nodeType": "YulTypedName",
                            "src": "3110:5:7",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "3117:8:7",
                            "nodeType": "YulTypedName",
                            "src": "3117:8:7",
                            "type": ""
                          },
                          {
                            "name": "max",
                            "nativeSrc": "3127:3:7",
                            "nodeType": "YulTypedName",
                            "src": "3127:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "3135:5:7",
                            "nodeType": "YulTypedName",
                            "src": "3135:5:7",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nativeSrc": "3142:4:7",
                            "nodeType": "YulTypedName",
                            "src": "3142:4:7",
                            "type": ""
                          }
                        ],
                        "src": "3082:375:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "3521:843:7",
                          "nodeType": "YulBlock",
                          "src": "3521:843:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3559:52:7",
                                "nodeType": "YulBlock",
                                "src": "3559:52:7",
                                "statements": [
                                  {
                                    "nativeSrc": "3573:10:7",
                                    "nodeType": "YulAssignment",
                                    "src": "3573:10:7",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "3582:1:7",
                                      "nodeType": "YulLiteral",
                                      "src": "3582:1:7",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "3573:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3573:5:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3596:5:7",
                                    "nodeType": "YulLeave",
                                    "src": "3596:5:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "3541:8:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3541:8:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3534:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3534:6:7"
                                },
                                "nativeSrc": "3534:16:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3534:16:7"
                              },
                              "nativeSrc": "3531:80:7",
                              "nodeType": "YulIf",
                              "src": "3531:80:7"
                            },
                            {
                              "body": {
                                "nativeSrc": "3644:52:7",
                                "nodeType": "YulBlock",
                                "src": "3644:52:7",
                                "statements": [
                                  {
                                    "nativeSrc": "3658:10:7",
                                    "nodeType": "YulAssignment",
                                    "src": "3658:10:7",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "3667:1:7",
                                      "nodeType": "YulLiteral",
                                      "src": "3667:1:7",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "3658:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3658:5:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3681:5:7",
                                    "nodeType": "YulLeave",
                                    "src": "3681:5:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "3630:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3630:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3623:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3623:6:7"
                                },
                                "nativeSrc": "3623:12:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3623:12:7"
                              },
                              "nativeSrc": "3620:76:7",
                              "nodeType": "YulIf",
                              "src": "3620:76:7"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "3732:52:7",
                                    "nodeType": "YulBlock",
                                    "src": "3732:52:7",
                                    "statements": [
                                      {
                                        "nativeSrc": "3746:10:7",
                                        "nodeType": "YulAssignment",
                                        "src": "3746:10:7",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "3755:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3755:1:7",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "3746:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3746:5:7"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3769:5:7",
                                        "nodeType": "YulLeave",
                                        "src": "3769:5:7"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "3725:59:7",
                                  "nodeType": "YulCase",
                                  "src": "3725:59:7",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "3730:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3730:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "3800:167:7",
                                    "nodeType": "YulBlock",
                                    "src": "3800:167:7",
                                    "statements": [
                                      {
                                        "body": {
                                          "nativeSrc": "3835:22:7",
                                          "nodeType": "YulBlock",
                                          "src": "3835:22:7",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nativeSrc": "3837:16:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3837:16:7"
                                                },
                                                "nativeSrc": "3837:18:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "3837:18:7"
                                              },
                                              "nativeSrc": "3837:18:7",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "3837:18:7"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "3820:8:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3820:8:7"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3830:3:7",
                                              "nodeType": "YulLiteral",
                                              "src": "3830:3:7",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nativeSrc": "3817:2:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3817:2:7"
                                          },
                                          "nativeSrc": "3817:17:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3817:17:7"
                                        },
                                        "nativeSrc": "3814:43:7",
                                        "nodeType": "YulIf",
                                        "src": "3814:43:7"
                                      },
                                      {
                                        "nativeSrc": "3870:25:7",
                                        "nodeType": "YulAssignment",
                                        "src": "3870:25:7",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "3883:8:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3883:8:7"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3893:1:7",
                                              "nodeType": "YulLiteral",
                                              "src": "3893:1:7",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "3879:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3879:3:7"
                                          },
                                          "nativeSrc": "3879:16:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3879:16:7"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "3870:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3870:5:7"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3908:11:7",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "3908:11:7",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "3918:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3918:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "3912:2:7",
                                            "nodeType": "YulTypedName",
                                            "src": "3912:2:7",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3932:7:7",
                                        "nodeType": "YulAssignment",
                                        "src": "3932:7:7",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "3938:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3938:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "3932:2:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3932:2:7"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3952:5:7",
                                        "nodeType": "YulLeave",
                                        "src": "3952:5:7"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "3793:174:7",
                                  "nodeType": "YulCase",
                                  "src": "3793:174:7",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "3798:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3798:1:7",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nativeSrc": "3712:4:7",
                                "nodeType": "YulIdentifier",
                                "src": "3712:4:7"
                              },
                              "nativeSrc": "3705:262:7",
                              "nodeType": "YulSwitch",
                              "src": "3705:262:7"
                            },
                            {
                              "body": {
                                "nativeSrc": "4065:114:7",
                                "nodeType": "YulBlock",
                                "src": "4065:114:7",
                                "statements": [
                                  {
                                    "nativeSrc": "4079:28:7",
                                    "nodeType": "YulAssignment",
                                    "src": "4079:28:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "4092:4:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4092:4:7"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "4098:8:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4098:8:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nativeSrc": "4088:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4088:3:7"
                                      },
                                      "nativeSrc": "4088:19:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4088:19:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "4079:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4079:5:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "4120:11:7",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "4120:11:7",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "4130:1:7",
                                      "nodeType": "YulLiteral",
                                      "src": "4130:1:7",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nativeSrc": "4124:2:7",
                                        "nodeType": "YulTypedName",
                                        "src": "4124:2:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "4144:7:7",
                                    "nodeType": "YulAssignment",
                                    "src": "4144:7:7",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "4150:1:7",
                                      "nodeType": "YulLiteral",
                                      "src": "4150:1:7",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "_2",
                                        "nativeSrc": "4144:2:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4144:2:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "4164:5:7",
                                    "nodeType": "YulLeave",
                                    "src": "4164:5:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "3989:4:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3989:4:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3995:2:7",
                                            "nodeType": "YulLiteral",
                                            "src": "3995:2:7",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "3986:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3986:2:7"
                                        },
                                        "nativeSrc": "3986:12:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3986:12:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "4003:8:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4003:8:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4013:2:7",
                                            "nodeType": "YulLiteral",
                                            "src": "4013:2:7",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "4000:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4000:2:7"
                                        },
                                        "nativeSrc": "4000:16:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4000:16:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3982:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3982:3:7"
                                    },
                                    "nativeSrc": "3982:35:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3982:35:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "4026:4:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4026:4:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4032:3:7",
                                            "nodeType": "YulLiteral",
                                            "src": "4032:3:7",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "4023:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4023:2:7"
                                        },
                                        "nativeSrc": "4023:13:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4023:13:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "4041:8:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4041:8:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4051:2:7",
                                            "nodeType": "YulLiteral",
                                            "src": "4051:2:7",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "4038:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4038:2:7"
                                        },
                                        "nativeSrc": "4038:16:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4038:16:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4019:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "4019:3:7"
                                    },
                                    "nativeSrc": "4019:36:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4019:36:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "3979:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3979:2:7"
                                },
                                "nativeSrc": "3979:77:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3979:77:7"
                              },
                              "nativeSrc": "3976:203:7",
                              "nodeType": "YulIf",
                              "src": "3976:203:7"
                            },
                            {
                              "nativeSrc": "4188:65:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4188:65:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "4230:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4230:4:7"
                                  },
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "4236:8:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4236:8:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4250:1:7",
                                        "nodeType": "YulLiteral",
                                        "src": "4250:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nativeSrc": "4246:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "4246:3:7"
                                    },
                                    "nativeSrc": "4246:6:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4246:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nativeSrc": "4211:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4211:18:7"
                                },
                                "nativeSrc": "4211:42:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4211:42:7"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nativeSrc": "4192:7:7",
                                  "nodeType": "YulTypedName",
                                  "src": "4192:7:7",
                                  "type": ""
                                },
                                {
                                  "name": "base_1",
                                  "nativeSrc": "4201:6:7",
                                  "nodeType": "YulTypedName",
                                  "src": "4201:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4298:22:7",
                                "nodeType": "YulBlock",
                                "src": "4298:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4300:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4300:16:7"
                                      },
                                      "nativeSrc": "4300:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4300:18:7"
                                    },
                                    "nativeSrc": "4300:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4300:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "4268:7:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4268:7:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4285:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "4285:1:7",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "4281:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4281:3:7"
                                        },
                                        "nativeSrc": "4281:6:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4281:6:7"
                                      },
                                      {
                                        "name": "base_1",
                                        "nativeSrc": "4289:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4289:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nativeSrc": "4277:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "4277:3:7"
                                    },
                                    "nativeSrc": "4277:19:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4277:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4265:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4265:2:7"
                                },
                                "nativeSrc": "4265:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4265:32:7"
                              },
                              "nativeSrc": "4262:58:7",
                              "nodeType": "YulIf",
                              "src": "4262:58:7"
                            },
                            {
                              "nativeSrc": "4329:29:7",
                              "nodeType": "YulAssignment",
                              "src": "4329:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "4342:7:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4342:7:7"
                                  },
                                  {
                                    "name": "base_1",
                                    "nativeSrc": "4351:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4351:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "4338:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4338:3:7"
                                },
                                "nativeSrc": "4338:20:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4338:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "4329:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4329:5:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nativeSrc": "3462:902:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "3492:4:7",
                            "nodeType": "YulTypedName",
                            "src": "3492:4:7",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "3498:8:7",
                            "nodeType": "YulTypedName",
                            "src": "3498:8:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "3511:5:7",
                            "nodeType": "YulTypedName",
                            "src": "3511:5:7",
                            "type": ""
                          }
                        ],
                        "src": "3462:902:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "4437:72:7",
                          "nodeType": "YulBlock",
                          "src": "4437:72:7",
                          "statements": [
                            {
                              "nativeSrc": "4447:56:7",
                              "nodeType": "YulAssignment",
                              "src": "4447:56:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "4477:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4477:4:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "exponent",
                                        "nativeSrc": "4487:8:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4487:8:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4497:4:7",
                                        "nodeType": "YulLiteral",
                                        "src": "4497:4:7",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4483:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "4483:3:7"
                                    },
                                    "nativeSrc": "4483:19:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4483:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nativeSrc": "4456:20:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4456:20:7"
                                },
                                "nativeSrc": "4456:47:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4456:47:7"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "4447:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4447:5:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint8",
                        "nativeSrc": "4369:140:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "4408:4:7",
                            "nodeType": "YulTypedName",
                            "src": "4408:4:7",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "4414:8:7",
                            "nodeType": "YulTypedName",
                            "src": "4414:8:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "4427:5:7",
                            "nodeType": "YulTypedName",
                            "src": "4427:5:7",
                            "type": ""
                          }
                        ],
                        "src": "4369:140:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "4566:116:7",
                          "nodeType": "YulBlock",
                          "src": "4566:116:7",
                          "statements": [
                            {
                              "nativeSrc": "4576:20:7",
                              "nodeType": "YulAssignment",
                              "src": "4576:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4591:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4591:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "4594:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4594:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "4587:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4587:3:7"
                                },
                                "nativeSrc": "4587:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4587:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nativeSrc": "4576:7:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4576:7:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4654:22:7",
                                "nodeType": "YulBlock",
                                "src": "4654:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4656:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4656:16:7"
                                      },
                                      "nativeSrc": "4656:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4656:18:7"
                                    },
                                    "nativeSrc": "4656:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4656:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nativeSrc": "4625:1:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4625:1:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "4618:6:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4618:6:7"
                                        },
                                        "nativeSrc": "4618:9:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4618:9:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nativeSrc": "4632:1:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "4632:1:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "product",
                                                "nativeSrc": "4639:7:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "4639:7:7"
                                              },
                                              {
                                                "name": "x",
                                                "nativeSrc": "4648:1:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "4648:1:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nativeSrc": "4635:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "4635:3:7"
                                            },
                                            "nativeSrc": "4635:15:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4635:15:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "eq",
                                          "nativeSrc": "4629:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4629:2:7"
                                        },
                                        "nativeSrc": "4629:22:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4629:22:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nativeSrc": "4615:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "4615:2:7"
                                    },
                                    "nativeSrc": "4615:37:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4615:37:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "4608:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4608:6:7"
                                },
                                "nativeSrc": "4608:45:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4608:45:7"
                              },
                              "nativeSrc": "4605:71:7",
                              "nodeType": "YulIf",
                              "src": "4605:71:7"
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nativeSrc": "4514:168:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "4545:1:7",
                            "nodeType": "YulTypedName",
                            "src": "4545:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "4548:1:7",
                            "nodeType": "YulTypedName",
                            "src": "4548:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nativeSrc": "4554:7:7",
                            "nodeType": "YulTypedName",
                            "src": "4554:7:7",
                            "type": ""
                          }
                        ],
                        "src": "4514:168:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "4788:102:7",
                          "nodeType": "YulBlock",
                          "src": "4788:102:7",
                          "statements": [
                            {
                              "nativeSrc": "4798:26:7",
                              "nodeType": "YulAssignment",
                              "src": "4798:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4810:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4810:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4821:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "4821:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4806:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4806:3:7"
                                },
                                "nativeSrc": "4806:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4806:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4798:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4798:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4840:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4840:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "4855:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4855:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4871:3:7",
                                                "nodeType": "YulLiteral",
                                                "src": "4871:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4876:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "4876:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "4867:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "4867:3:7"
                                            },
                                            "nativeSrc": "4867:11:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4867:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4880:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "4880:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "4863:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4863:3:7"
                                        },
                                        "nativeSrc": "4863:19:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4863:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4851:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "4851:3:7"
                                    },
                                    "nativeSrc": "4851:32:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4851:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4833:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4833:6:7"
                                },
                                "nativeSrc": "4833:51:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4833:51:7"
                              },
                              "nativeSrc": "4833:51:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "4833:51:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "4687:203:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4757:9:7",
                            "nodeType": "YulTypedName",
                            "src": "4757:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "4768:6:7",
                            "nodeType": "YulTypedName",
                            "src": "4768:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4779:4:7",
                            "nodeType": "YulTypedName",
                            "src": "4779:4:7",
                            "type": ""
                          }
                        ],
                        "src": "4687:203:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "4943:77:7",
                          "nodeType": "YulBlock",
                          "src": "4943:77:7",
                          "statements": [
                            {
                              "nativeSrc": "4953:16:7",
                              "nodeType": "YulAssignment",
                              "src": "4953:16:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4964:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4964:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "4967:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4967:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4960:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4960:3:7"
                                },
                                "nativeSrc": "4960:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4960:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "4953:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4953:3:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4992:22:7",
                                "nodeType": "YulBlock",
                                "src": "4992:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4994:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4994:16:7"
                                      },
                                      "nativeSrc": "4994:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4994:18:7"
                                    },
                                    "nativeSrc": "4994:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4994:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4984:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4984:1:7"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "4987:3:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4987:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4981:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4981:2:7"
                                },
                                "nativeSrc": "4981:10:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4981:10:7"
                              },
                              "nativeSrc": "4978:36:7",
                              "nodeType": "YulIf",
                              "src": "4978:36:7"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "4895:125:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "4926:1:7",
                            "nodeType": "YulTypedName",
                            "src": "4926:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "4929:1:7",
                            "nodeType": "YulTypedName",
                            "src": "4929:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "4935:3:7",
                            "nodeType": "YulTypedName",
                            "src": "4935:3:7",
                            "type": ""
                          }
                        ],
                        "src": "4895:125:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "5182:188:7",
                          "nodeType": "YulBlock",
                          "src": "5182:188:7",
                          "statements": [
                            {
                              "nativeSrc": "5192:26:7",
                              "nodeType": "YulAssignment",
                              "src": "5192:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5204:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5204:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5215:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "5215:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5200:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5200:3:7"
                                },
                                "nativeSrc": "5200:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5200:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5192:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5192:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5234:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5234:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "5249:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "5249:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5265:3:7",
                                                "nodeType": "YulLiteral",
                                                "src": "5265:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5270:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "5270:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "5261:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "5261:3:7"
                                            },
                                            "nativeSrc": "5261:11:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5261:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5274:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "5274:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "5257:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "5257:3:7"
                                        },
                                        "nativeSrc": "5257:19:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5257:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5245:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "5245:3:7"
                                    },
                                    "nativeSrc": "5245:32:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5245:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5227:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5227:6:7"
                                },
                                "nativeSrc": "5227:51:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5227:51:7"
                              },
                              "nativeSrc": "5227:51:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "5227:51:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5298:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "5298:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5309:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "5309:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5294:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "5294:3:7"
                                    },
                                    "nativeSrc": "5294:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5294:18:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "5314:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5314:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5287:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5287:6:7"
                                },
                                "nativeSrc": "5287:34:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5287:34:7"
                              },
                              "nativeSrc": "5287:34:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "5287:34:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5341:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "5341:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5352:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "5352:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5337:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "5337:3:7"
                                    },
                                    "nativeSrc": "5337:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5337:18:7"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "5357:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5357:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5330:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5330:6:7"
                                },
                                "nativeSrc": "5330:34:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5330:34:7"
                              },
                              "nativeSrc": "5330:34:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "5330:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
                        "nativeSrc": "5025:345:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5135:9:7",
                            "nodeType": "YulTypedName",
                            "src": "5135:9:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "5146:6:7",
                            "nodeType": "YulTypedName",
                            "src": "5146:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "5154:6:7",
                            "nodeType": "YulTypedName",
                            "src": "5154:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5162:6:7",
                            "nodeType": "YulTypedName",
                            "src": "5162:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5173:4:7",
                            "nodeType": "YulTypedName",
                            "src": "5173:4:7",
                            "type": ""
                          }
                        ],
                        "src": "5025:345:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "5476:76:7",
                          "nodeType": "YulBlock",
                          "src": "5476:76:7",
                          "statements": [
                            {
                              "nativeSrc": "5486:26:7",
                              "nodeType": "YulAssignment",
                              "src": "5486:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5498:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5498:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5509:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "5509:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5494:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5494:3:7"
                                },
                                "nativeSrc": "5494:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5494:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5486:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5486:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5528:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5528:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "5539:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5539:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5521:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5521:6:7"
                                },
                                "nativeSrc": "5521:25:7",
                                "nodeType": "YulFunctionCall",
                                "src": "5521:25:7"
                              },
                              "nativeSrc": "5521:25:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "5521:25:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "5375:177:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5445:9:7",
                            "nodeType": "YulTypedName",
                            "src": "5445:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5456:6:7",
                            "nodeType": "YulTypedName",
                            "src": "5456:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5467:4:7",
                            "nodeType": "YulTypedName",
                            "src": "5467:4:7",
                            "type": ""
                          }
                        ],
                        "src": "5375:177:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50604051610cd5380380610cd583398101604081905261002f9161022c565b6040518060400160405280600481526020016327b832b760e11b8152506040518060400160405280600481526020016327a822a760e11b815250816003908161007891906102fb565b50600461008582826102fb565b5050506100b88161009a6100be60201b60201c565b6100a590600a6104b8565b6100b390633b9aca006104c7565b6100c3565b506104f1565b601290565b6001600160a01b0382166100f25760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6100fe60008383610102565b5050565b6001600160a01b03831661012d57806002600082825461012291906104de565b9091555061019f9050565b6001600160a01b038316600090815260208190526040902054818110156101805760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100e9565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166101bb576002805482900390556101da565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161021f91815260200190565b60405180910390a3505050565b60006020828403121561023e57600080fd5b81516001600160a01b038116811461025557600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061028657607f821691505b6020821081036102a657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102f657806000526020600020601f840160051c810160208510156102d35750805b601f840160051c820191505b818110156102f357600081556001016102df565b50505b505050565b81516001600160401b038111156103145761031461025c565b610328816103228454610272565b846102ac565b6020601f82116001811461035c57600083156103445750848201515b600019600385901b1c1916600184901b1784556102f3565b600084815260208120601f198516915b8281101561038c578785015182556020948501946001909201910161036c565b50848210156103aa5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561040a578085048111156103ee576103ee6103b9565b60018416156103fc57908102905b60019390931c9280026103d3565b935093915050565b600082610421575060016104b2565b8161042e575060006104b2565b8160018114610444576002811461044e5761046a565b60019150506104b2565b60ff84111561045f5761045f6103b9565b50506001821b6104b2565b5060208310610133831016604e8410600b841016171561048d575081810a6104b2565b61049a60001984846103cf565b80600019048211156104ae576104ae6103b9565b0290505b92915050565b600061025560ff841683610412565b80820281158282048414176104b2576104b26103b9565b808201808211156104b2576104b26103b9565b6107d5806105006000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806342966c681161007157806342966c681461012357806370a082311461013857806379cc67901461016157806395d89b4114610174578063a9059cbb1461017c578063dd62ed3e1461018f57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c8565b6040516100c39190610605565b60405180910390f35b6100df6100da36600461066f565b61025a565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610699565b610274565b604051601281526020016100c3565b6101366101313660046106d6565b610298565b005b6100f36101463660046106ef565b6001600160a01b031660009081526020819052604090205490565b61013661016f36600461066f565b6102a5565b6100b66102be565b6100df61018a36600461066f565b6102cd565b6100f361019d366004610711565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d790610744565b80601f016020809104026020016040519081016040528092919081815260200182805461020390610744565b80156102505780601f1061022557610100808354040283529160200191610250565b820191906000526020600020905b81548152906001019060200180831161023357829003601f168201915b5050505050905090565b6000336102688185856102db565b60019150505b92915050565b6000336102828582856102ed565b61028d858585610371565b506001949350505050565b6102a233826103d0565b50565b6102b08233836102ed565b6102ba82826103d0565b5050565b6060600480546101d790610744565b600033610268818585610371565b6102e88383836001610406565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561036b578181101561035c57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61036b84848484036000610406565b50505050565b6001600160a01b03831661039b57604051634b637e8f60e11b815260006004820152602401610353565b6001600160a01b0382166103c55760405163ec442f0560e01b815260006004820152602401610353565b6102e88383836104db565b6001600160a01b0382166103fa57604051634b637e8f60e11b815260006004820152602401610353565b6102ba826000836104db565b6001600160a01b0384166104305760405163e602df0560e01b815260006004820152602401610353565b6001600160a01b03831661045a57604051634a1406b160e11b815260006004820152602401610353565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561036b57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104cd91815260200190565b60405180910390a350505050565b6001600160a01b0383166105065780600260008282546104fb919061077e565b909155506105789050565b6001600160a01b038316600090815260208190526040902054818110156105595760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610353565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610594576002805482900390556105b3565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105f891815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156106335760208186018101516040868401015201610616565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461066a57600080fd5b919050565b6000806040838503121561068257600080fd5b61068b83610653565b946020939093013593505050565b6000806000606084860312156106ae57600080fd5b6106b784610653565b92506106c560208501610653565b929592945050506040919091013590565b6000602082840312156106e857600080fd5b5035919050565b60006020828403121561070157600080fd5b61070a82610653565b9392505050565b6000806040838503121561072457600080fd5b61072d83610653565b915061073b60208401610653565b90509250929050565b600181811c9082168061075857607f821691505b60208210810361077857634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026e57634e487b7160e01b600052601160045260246000fdfea264697066735822122071597eab43e05017d3851045d13ae6c98d307a27a3c3b6b618ba6e195882c0f764736f6c634300081b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xCD5 CODESIZE SUB DUP1 PUSH2 0xCD5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x27B832B7 PUSH1 0xE1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x27A822A7 PUSH1 0xE1 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x85 DUP3 DUP3 PUSH2 0x2FB JUMP JUMPDEST POP POP POP PUSH2 0xB8 DUP2 PUSH2 0x9A PUSH2 0xBE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xA5 SWAP1 PUSH1 0xA PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0xB3 SWAP1 PUSH4 0x3B9ACA00 PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST POP PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFE PUSH1 0x0 DUP4 DUP4 PUSH2 0x102 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12D JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x4DE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x19F SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BB JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x286 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2F6 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2D3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2DF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x314 JUMPI PUSH2 0x314 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x328 DUP2 PUSH2 0x322 DUP5 SLOAD PUSH2 0x272 JUMP JUMPDEST DUP5 PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x35C JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x344 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x38C JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x36C JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x3AA JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x40A JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x3EE JUMPI PUSH2 0x3EE PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x3FC JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x3D3 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x421 JUMPI POP PUSH1 0x1 PUSH2 0x4B2 JUMP JUMPDEST DUP2 PUSH2 0x42E JUMPI POP PUSH1 0x0 PUSH2 0x4B2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x444 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x44E JUMPI PUSH2 0x46A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x45F JUMPI PUSH2 0x45F PUSH2 0x3B9 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x4B2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x48D JUMPI POP DUP2 DUP2 EXP PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x49A PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x3CF JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x4AE JUMPI PUSH2 0x4AE PUSH2 0x3B9 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x255 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x412 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4B2 JUMPI PUSH2 0x4B2 PUSH2 0x3B9 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4B2 JUMPI PUSH2 0x4B2 PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x7D5 DUP1 PUSH2 0x500 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF3 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2BE JUMP JUMPDEST PUSH2 0xDF PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x711 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D7 SWAP1 PUSH2 0x744 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x203 SWAP1 PUSH2 0x744 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x250 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x225 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x250 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x233 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x268 DUP2 DUP6 DUP6 PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x282 DUP6 DUP3 DUP6 PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x28D DUP6 DUP6 DUP6 PUSH2 0x371 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2A2 CALLER DUP3 PUSH2 0x3D0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B0 DUP3 CALLER DUP4 PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x2BA DUP3 DUP3 PUSH2 0x3D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D7 SWAP1 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x268 DUP2 DUP6 DUP6 PUSH2 0x371 JUMP JUMPDEST PUSH2 0x2E8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x406 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x36B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x35C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x36B DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x406 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x353 JUMP JUMPDEST PUSH2 0x2E8 DUP4 DUP4 DUP4 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x353 JUMP JUMPDEST PUSH2 0x2BA DUP3 PUSH1 0x0 DUP4 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x430 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x36B JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x506 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x578 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x559 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x594 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5F8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x633 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x616 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x68B DUP4 PUSH2 0x653 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B7 DUP5 PUSH2 0x653 JUMP JUMPDEST SWAP3 POP PUSH2 0x6C5 PUSH1 0x20 DUP6 ADD PUSH2 0x653 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x70A DUP3 PUSH2 0x653 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72D DUP4 PUSH2 0x653 JUMP JUMPDEST SWAP2 POP PUSH2 0x73B PUSH1 0x20 DUP5 ADD PUSH2 0x653 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x758 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x778 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x597EAB43E05017D3851045D13AE6C98D307A 0x27 LOG3 0xC3 0xB6 0xB6 XOR 0xBA PUSH15 0x195882C0F764736F6C634300081B00 CALLER ",
              "sourceMap": "372:1031:6:-:0;;;1283:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1320:4;;;;;;;;;;;;;-1:-1:-1;;;1320:4:6;;;1326:6;;;;;;;;;;;;;-1:-1:-1;;;1326:6:6;;;1656:5:1;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:1;:17;1681:7;1671;:17;:::i;:::-;;1582:113;;1344:50:6::1;1350:9;1383:10;:8;;;:10;;:::i;:::-;1377:16;::::0;:2:::1;:16;:::i;:::-;1361:32;::::0;:13:::1;:32;:::i;:::-;1344:5;:50::i;:::-;1283:118:::0;372:1031;;2688:82:1;2761:2;;2688:82::o;7439:208::-;-1:-1:-1;;;;;7509:21:1;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:1;;7582:1;7553:32;;;4833:51:7;4806:18;;7553:32:1;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:1;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:1;;-1:-1:-1;6074:540:1;;-1:-1:-1;;;;;6288:15:1;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:1;;-1:-1:-1;;;;;5245:32:7;;6367:50:1;;;5227:51:7;5294:18;;;5287:34;;;5337:18;;;5330:34;;;5200:18;;6367:50:1;5025:345:7;6317:115:1;-1:-1:-1;;;;;6552:15:1;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:1;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:1;7073:4;-1:-1:-1;;;;;7064:25:1;;7083:5;7064:25;;;;5521::7;;5509:2;5494:18;;5375:177;7064:25:1;;;;;;;;5989:1107;;;:::o;14:290:7:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:7;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:7:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:7;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1299::-;1766:10;;-1:-1:-1;;;;;1788:30:7;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;1996:4;2027:2;2016:14;;2044:1;2039:649;;;;2732:1;2749:6;2746:89;;;-1:-1:-1;2801:19:7;;;2795:26;2746:89;-1:-1:-1;;1603:1:7;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2848:81;;2009:930;;2039:649;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2075:20:7;;;2193:222;2207:7;2204:1;2201:14;2193:222;;;2289:19;;;2283:26;2268:42;;2396:4;2381:20;;;;2349:1;2337:14;;;;2223:12;2193:222;;;2197:3;2443:6;2434:7;2431:19;2428:201;;;2504:19;;;2498:26;-1:-1:-1;;2587:1:7;2583:14;;;2599:3;2579:24;2575:37;2571:42;2556:58;2541:74;;2428:201;-1:-1:-1;;;;2675:1:7;2659:14;;;2655:22;2642:36;;-1:-1:-1;1646:1299:7:o;2950:127::-;3011:10;3006:3;3002:20;2999:1;2992:31;3042:4;3039:1;3032:15;3066:4;3063:1;3056:15;3082:375;3170:1;3188:5;3202:249;3223:1;3213:8;3210:15;3202:249;;;3273:4;3268:3;3264:14;3258:4;3255:24;3252:50;;;3282:18;;:::i;:::-;3332:1;3322:8;3318:16;3315:49;;;3346:16;;;;3315:49;3429:1;3425:16;;;;;3385:15;;3202:249;;;3082:375;;;;;;:::o;3462:902::-;3511:5;3541:8;3531:80;;-1:-1:-1;3582:1:7;3596:5;;3531:80;3630:4;3620:76;;-1:-1:-1;3667:1:7;3681:5;;3620:76;3712:4;3730:1;3725:59;;;;3798:1;3793:174;;;;3705:262;;3725:59;3755:1;3746:10;;3769:5;;;3793:174;3830:3;3820:8;3817:17;3814:43;;;3837:18;;:::i;:::-;-1:-1:-1;;3893:1:7;3879:16;;3952:5;;3705:262;;4051:2;4041:8;4038:16;4032:3;4026:4;4023:13;4019:36;4013:2;4003:8;4000:16;3995:2;3989:4;3986:12;3982:35;3979:77;3976:203;;;-1:-1:-1;4088:19:7;;;4164:5;;3976:203;4211:42;-1:-1:-1;;4236:8:7;4230:4;4211:42;:::i;:::-;4289:6;4285:1;4281:6;4277:19;4268:7;4265:32;4262:58;;;4300:18;;:::i;:::-;4338:20;;-1:-1:-1;3462:902:7;;;;;:::o;4369:140::-;4427:5;4456:47;4497:4;4487:8;4483:19;4477:4;4456:47;:::i;4514:168::-;4587:9;;;4618;;4635:15;;;4629:22;;4615:37;4605:71;;4656:18;;:::i;4895:125::-;4960:9;;;4981:10;;;4978:36;;;4994:18;;:::i;5375:177::-;372:1031:6;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_approve_542": {
                  "entryPoint": 731,
                  "id": 542,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_approve_602": {
                  "entryPoint": 1030,
                  "id": 602,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@_burn_524": {
                  "entryPoint": 976,
                  "id": 524,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_msgSender_813": {
                  "entryPoint": null,
                  "id": 813,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_spendAllowance_650": {
                  "entryPoint": 749,
                  "id": 650,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_transfer_381": {
                  "entryPoint": 881,
                  "id": 381,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_update_458": {
                  "entryPoint": 1243,
                  "id": 458,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@allowance_278": {
                  "entryPoint": null,
                  "id": 278,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@approve_302": {
                  "entryPoint": 602,
                  "id": 302,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@balanceOf_237": {
                  "entryPoint": null,
                  "id": 237,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@burnFrom_774": {
                  "entryPoint": 677,
                  "id": 774,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@burn_753": {
                  "entryPoint": 664,
                  "id": 753,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@decimals_215": {
                  "entryPoint": null,
                  "id": 215,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@name_197": {
                  "entryPoint": 456,
                  "id": 197,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@symbol_206": {
                  "entryPoint": 702,
                  "id": 206,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@totalSupply_224": {
                  "entryPoint": null,
                  "id": 224,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@transferFrom_334": {
                  "entryPoint": 628,
                  "id": 334,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@transfer_261": {
                  "entryPoint": 717,
                  "id": 261,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_address": {
                  "entryPoint": 1619,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 1775,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_address": {
                  "entryPoint": 1809,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_addresst_addresst_uint256": {
                  "entryPoint": 1689,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_addresst_uint256": {
                  "entryPoint": 1647,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 1750,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 1541,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 1918,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 1860,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:3825:7",
                    "nodeType": "YulBlock",
                    "src": "0:3825:7",
                    "statements": [
                      {
                        "nativeSrc": "6:3:7",
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "135:406:7",
                          "nodeType": "YulBlock",
                          "src": "135:406:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "152:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "152:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "163:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "163:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "145:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "145:6:7"
                                },
                                "nativeSrc": "145:21:7",
                                "nodeType": "YulFunctionCall",
                                "src": "145:21:7"
                              },
                              "nativeSrc": "145:21:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "145:21:7"
                            },
                            {
                              "nativeSrc": "175:27:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "175:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "195:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "195:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "189:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "189:5:7"
                                },
                                "nativeSrc": "189:13:7",
                                "nodeType": "YulFunctionCall",
                                "src": "189:13:7"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "179:6:7",
                                  "nodeType": "YulTypedName",
                                  "src": "179:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "222:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "222:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "233:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "233:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "218:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "218:3:7"
                                    },
                                    "nativeSrc": "218:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "218:18:7"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "238:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "238:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "211:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "211:6:7"
                                },
                                "nativeSrc": "211:34:7",
                                "nodeType": "YulFunctionCall",
                                "src": "211:34:7"
                              },
                              "nativeSrc": "211:34:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "211:34:7"
                            },
                            {
                              "nativeSrc": "254:10:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "254:10:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "263:1:7",
                                "nodeType": "YulLiteral",
                                "src": "263:1:7",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nativeSrc": "258:1:7",
                                  "nodeType": "YulTypedName",
                                  "src": "258:1:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "323:90:7",
                                "nodeType": "YulBlock",
                                "src": "323:90:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nativeSrc": "352:9:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "352:9:7"
                                                },
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "363:1:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "363:1:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "348:3:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "348:3:7"
                                              },
                                              "nativeSrc": "348:17:7",
                                              "nodeType": "YulFunctionCall",
                                              "src": "348:17:7"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "367:2:7",
                                              "nodeType": "YulLiteral",
                                              "src": "367:2:7",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "344:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "344:3:7"
                                          },
                                          "nativeSrc": "344:26:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "344:26:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nativeSrc": "386:6:7",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "386:6:7"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nativeSrc": "394:1:7",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "394:1:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nativeSrc": "382:3:7",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "382:3:7"
                                                  },
                                                  "nativeSrc": "382:14:7",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "382:14:7"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "398:2:7",
                                                  "nodeType": "YulLiteral",
                                                  "src": "398:2:7",
                                                  "type": "",
                                                  "value": "32"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "378:3:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "378:3:7"
                                              },
                                              "nativeSrc": "378:23:7",
                                              "nodeType": "YulFunctionCall",
                                              "src": "378:23:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nativeSrc": "372:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "372:5:7"
                                          },
                                          "nativeSrc": "372:30:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "372:30:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "337:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "337:6:7"
                                      },
                                      "nativeSrc": "337:66:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "337:66:7"
                                    },
                                    "nativeSrc": "337:66:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "337:66:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nativeSrc": "284:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "284:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "287:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "287:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "281:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "281:2:7"
                                },
                                "nativeSrc": "281:13:7",
                                "nodeType": "YulFunctionCall",
                                "src": "281:13:7"
                              },
                              "nativeSrc": "273:140:7",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "295:19:7",
                                "nodeType": "YulBlock",
                                "src": "295:19:7",
                                "statements": [
                                  {
                                    "nativeSrc": "297:15:7",
                                    "nodeType": "YulAssignment",
                                    "src": "297:15:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "306:1:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "306:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "309:2:7",
                                          "nodeType": "YulLiteral",
                                          "src": "309:2:7",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "302:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "302:3:7"
                                      },
                                      "nativeSrc": "302:10:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "302:10:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "297:1:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "297:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "277:3:7",
                                "nodeType": "YulBlock",
                                "src": "277:3:7",
                                "statements": []
                              },
                              "src": "273:140:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "437:9:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "437:9:7"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "448:6:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "448:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "433:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "433:3:7"
                                        },
                                        "nativeSrc": "433:22:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "433:22:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "457:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "457:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "429:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "429:3:7"
                                    },
                                    "nativeSrc": "429:31:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "429:31:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "462:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "462:1:7",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "422:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "422:6:7"
                                },
                                "nativeSrc": "422:42:7",
                                "nodeType": "YulFunctionCall",
                                "src": "422:42:7"
                              },
                              "nativeSrc": "422:42:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "422:42:7"
                            },
                            {
                              "nativeSrc": "473:62:7",
                              "nodeType": "YulAssignment",
                              "src": "473:62:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "489:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "489:9:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nativeSrc": "508:6:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "508:6:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "516:2:7",
                                                "nodeType": "YulLiteral",
                                                "src": "516:2:7",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "504:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "504:3:7"
                                            },
                                            "nativeSrc": "504:15:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "504:15:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "525:2:7",
                                                "nodeType": "YulLiteral",
                                                "src": "525:2:7",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nativeSrc": "521:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "521:3:7"
                                            },
                                            "nativeSrc": "521:7:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "521:7:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "500:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "500:3:7"
                                        },
                                        "nativeSrc": "500:29:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "500:29:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "485:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "485:3:7"
                                    },
                                    "nativeSrc": "485:45:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "485:45:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "532:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "532:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "481:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "481:3:7"
                                },
                                "nativeSrc": "481:54:7",
                                "nodeType": "YulFunctionCall",
                                "src": "481:54:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "473:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "473:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "14:527:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "104:9:7",
                            "nodeType": "YulTypedName",
                            "src": "104:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "115:6:7",
                            "nodeType": "YulTypedName",
                            "src": "115:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "126:4:7",
                            "nodeType": "YulTypedName",
                            "src": "126:4:7",
                            "type": ""
                          }
                        ],
                        "src": "14:527:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "595:124:7",
                          "nodeType": "YulBlock",
                          "src": "595:124:7",
                          "statements": [
                            {
                              "nativeSrc": "605:29:7",
                              "nodeType": "YulAssignment",
                              "src": "605:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "627:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "627:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "614:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "614:12:7"
                                },
                                "nativeSrc": "614:20:7",
                                "nodeType": "YulFunctionCall",
                                "src": "614:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "605:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "605:5:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "697:16:7",
                                "nodeType": "YulBlock",
                                "src": "697:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "706:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "706:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "709:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "709:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "699:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "699:6:7"
                                      },
                                      "nativeSrc": "699:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "699:12:7"
                                    },
                                    "nativeSrc": "699:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "699:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "656:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "656:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "667:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "667:5:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "682:3:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "682:3:7",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "687:1:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "687:1:7",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "678:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "678:3:7"
                                                },
                                                "nativeSrc": "678:11:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "678:11:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "691:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "691:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "674:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "674:3:7"
                                            },
                                            "nativeSrc": "674:19:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "674:19:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "663:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "663:3:7"
                                        },
                                        "nativeSrc": "663:31:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "663:31:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "653:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "653:2:7"
                                    },
                                    "nativeSrc": "653:42:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "653:42:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "646:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "646:6:7"
                                },
                                "nativeSrc": "646:50:7",
                                "nodeType": "YulFunctionCall",
                                "src": "646:50:7"
                              },
                              "nativeSrc": "643:70:7",
                              "nodeType": "YulIf",
                              "src": "643:70:7"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nativeSrc": "546:173:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "574:6:7",
                            "nodeType": "YulTypedName",
                            "src": "574:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nativeSrc": "585:5:7",
                            "nodeType": "YulTypedName",
                            "src": "585:5:7",
                            "type": ""
                          }
                        ],
                        "src": "546:173:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "811:213:7",
                          "nodeType": "YulBlock",
                          "src": "811:213:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "857:16:7",
                                "nodeType": "YulBlock",
                                "src": "857:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "866:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "866:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "869:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "869:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "859:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "859:6:7"
                                      },
                                      "nativeSrc": "859:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "859:12:7"
                                    },
                                    "nativeSrc": "859:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "859:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "832:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "832:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "841:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "841:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "828:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "828:3:7"
                                    },
                                    "nativeSrc": "828:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "828:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "853:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "853:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "824:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "824:3:7"
                                },
                                "nativeSrc": "824:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "824:32:7"
                              },
                              "nativeSrc": "821:52:7",
                              "nodeType": "YulIf",
                              "src": "821:52:7"
                            },
                            {
                              "nativeSrc": "882:39:7",
                              "nodeType": "YulAssignment",
                              "src": "882:39:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "911:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "911:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "892:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "892:18:7"
                                },
                                "nativeSrc": "892:29:7",
                                "nodeType": "YulFunctionCall",
                                "src": "892:29:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "882:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "882:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "930:14:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "930:14:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "943:1:7",
                                "nodeType": "YulLiteral",
                                "src": "943:1:7",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "934:5:7",
                                  "nodeType": "YulTypedName",
                                  "src": "934:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "953:41:7",
                              "nodeType": "YulAssignment",
                              "src": "953:41:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "979:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "979:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "990:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "990:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "975:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "975:3:7"
                                    },
                                    "nativeSrc": "975:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "975:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "962:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "962:12:7"
                                },
                                "nativeSrc": "962:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "962:32:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "953:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "953:5:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1003:15:7",
                              "nodeType": "YulAssignment",
                              "src": "1003:15:7",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1013:5:7",
                                "nodeType": "YulIdentifier",
                                "src": "1013:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1003:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1003:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nativeSrc": "724:300:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "769:9:7",
                            "nodeType": "YulTypedName",
                            "src": "769:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "780:7:7",
                            "nodeType": "YulTypedName",
                            "src": "780:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "792:6:7",
                            "nodeType": "YulTypedName",
                            "src": "792:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "800:6:7",
                            "nodeType": "YulTypedName",
                            "src": "800:6:7",
                            "type": ""
                          }
                        ],
                        "src": "724:300:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1124:92:7",
                          "nodeType": "YulBlock",
                          "src": "1124:92:7",
                          "statements": [
                            {
                              "nativeSrc": "1134:26:7",
                              "nodeType": "YulAssignment",
                              "src": "1134:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1146:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1146:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1157:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1157:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1142:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1142:3:7"
                                },
                                "nativeSrc": "1142:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1142:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1134:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1134:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1176:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1176:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "1201:6:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "1201:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "1194:6:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "1194:6:7"
                                        },
                                        "nativeSrc": "1194:14:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1194:14:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "1187:6:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1187:6:7"
                                    },
                                    "nativeSrc": "1187:22:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1187:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1169:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1169:6:7"
                                },
                                "nativeSrc": "1169:41:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1169:41:7"
                              },
                              "nativeSrc": "1169:41:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1169:41:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nativeSrc": "1029:187:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1093:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1093:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1104:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1104:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1115:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1115:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1029:187:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1322:76:7",
                          "nodeType": "YulBlock",
                          "src": "1322:76:7",
                          "statements": [
                            {
                              "nativeSrc": "1332:26:7",
                              "nodeType": "YulAssignment",
                              "src": "1332:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1344:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1344:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1355:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1355:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1340:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1340:3:7"
                                },
                                "nativeSrc": "1340:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1340:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1332:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1332:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1374:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1374:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "1385:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1385:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1367:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1367:6:7"
                                },
                                "nativeSrc": "1367:25:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1367:25:7"
                              },
                              "nativeSrc": "1367:25:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1367:25:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "1221:177:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1291:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1291:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1302:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1302:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1313:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1313:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1221:177:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1507:270:7",
                          "nodeType": "YulBlock",
                          "src": "1507:270:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1553:16:7",
                                "nodeType": "YulBlock",
                                "src": "1553:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1562:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "1562:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1565:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "1565:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1555:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1555:6:7"
                                      },
                                      "nativeSrc": "1555:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1555:12:7"
                                    },
                                    "nativeSrc": "1555:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1555:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1528:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1528:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1537:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1537:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1524:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1524:3:7"
                                    },
                                    "nativeSrc": "1524:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1524:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1549:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1549:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1520:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1520:3:7"
                                },
                                "nativeSrc": "1520:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1520:32:7"
                              },
                              "nativeSrc": "1517:52:7",
                              "nodeType": "YulIf",
                              "src": "1517:52:7"
                            },
                            {
                              "nativeSrc": "1578:39:7",
                              "nodeType": "YulAssignment",
                              "src": "1578:39:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1607:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1607:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1588:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1588:18:7"
                                },
                                "nativeSrc": "1588:29:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1588:29:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1578:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1578:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1626:48:7",
                              "nodeType": "YulAssignment",
                              "src": "1626:48:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1659:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1659:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1670:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1670:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1655:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1655:3:7"
                                    },
                                    "nativeSrc": "1655:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1655:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1636:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1636:18:7"
                                },
                                "nativeSrc": "1636:38:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1636:38:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1626:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1626:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1683:14:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1683:14:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1696:1:7",
                                "nodeType": "YulLiteral",
                                "src": "1696:1:7",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1687:5:7",
                                  "nodeType": "YulTypedName",
                                  "src": "1687:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1706:41:7",
                              "nodeType": "YulAssignment",
                              "src": "1706:41:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1732:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1732:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1743:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1743:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1728:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1728:3:7"
                                    },
                                    "nativeSrc": "1728:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1728:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1715:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1715:12:7"
                                },
                                "nativeSrc": "1715:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1715:32:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1706:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1706:5:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1756:15:7",
                              "nodeType": "YulAssignment",
                              "src": "1756:15:7",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1766:5:7",
                                "nodeType": "YulIdentifier",
                                "src": "1766:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "1756:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1756:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                        "nativeSrc": "1403:374:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1457:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1457:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1468:7:7",
                            "nodeType": "YulTypedName",
                            "src": "1468:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1480:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1480:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1488:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1488:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1496:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1496:6:7",
                            "type": ""
                          }
                        ],
                        "src": "1403:374:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1879:87:7",
                          "nodeType": "YulBlock",
                          "src": "1879:87:7",
                          "statements": [
                            {
                              "nativeSrc": "1889:26:7",
                              "nodeType": "YulAssignment",
                              "src": "1889:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1901:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1901:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1912:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1912:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1897:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1897:3:7"
                                },
                                "nativeSrc": "1897:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1897:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1889:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1889:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1931:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1931:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "1946:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1946:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1954:4:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1954:4:7",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1942:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1942:3:7"
                                    },
                                    "nativeSrc": "1942:17:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1942:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1924:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1924:6:7"
                                },
                                "nativeSrc": "1924:36:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1924:36:7"
                              },
                              "nativeSrc": "1924:36:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1924:36:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nativeSrc": "1782:184:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1848:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1848:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1859:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1859:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1870:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1870:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1782:184:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "2041:156:7",
                          "nodeType": "YulBlock",
                          "src": "2041:156:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2087:16:7",
                                "nodeType": "YulBlock",
                                "src": "2087:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2096:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2096:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2099:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2099:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2089:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2089:6:7"
                                      },
                                      "nativeSrc": "2089:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2089:12:7"
                                    },
                                    "nativeSrc": "2089:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2089:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2062:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2062:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2071:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2071:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2058:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2058:3:7"
                                    },
                                    "nativeSrc": "2058:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2058:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2083:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2083:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2054:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2054:3:7"
                                },
                                "nativeSrc": "2054:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2054:32:7"
                              },
                              "nativeSrc": "2051:52:7",
                              "nodeType": "YulIf",
                              "src": "2051:52:7"
                            },
                            {
                              "nativeSrc": "2112:14:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2112:14:7",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "2125:1:7",
                                "nodeType": "YulLiteral",
                                "src": "2125:1:7",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2116:5:7",
                                  "nodeType": "YulTypedName",
                                  "src": "2116:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2135:32:7",
                              "nodeType": "YulAssignment",
                              "src": "2135:32:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2157:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2157:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2144:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2144:12:7"
                                },
                                "nativeSrc": "2144:23:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2144:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2135:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2135:5:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2176:15:7",
                              "nodeType": "YulAssignment",
                              "src": "2176:15:7",
                              "value": {
                                "name": "value",
                                "nativeSrc": "2186:5:7",
                                "nodeType": "YulIdentifier",
                                "src": "2186:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2176:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2176:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nativeSrc": "1971:226:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2007:9:7",
                            "nodeType": "YulTypedName",
                            "src": "2007:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2018:7:7",
                            "nodeType": "YulTypedName",
                            "src": "2018:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2030:6:7",
                            "nodeType": "YulTypedName",
                            "src": "2030:6:7",
                            "type": ""
                          }
                        ],
                        "src": "1971:226:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "2272:116:7",
                          "nodeType": "YulBlock",
                          "src": "2272:116:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2318:16:7",
                                "nodeType": "YulBlock",
                                "src": "2318:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2327:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2327:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2330:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2330:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2320:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2320:6:7"
                                      },
                                      "nativeSrc": "2320:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2320:12:7"
                                    },
                                    "nativeSrc": "2320:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2320:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2293:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2293:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2302:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2302:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2289:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2289:3:7"
                                    },
                                    "nativeSrc": "2289:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2289:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2314:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2314:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2285:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2285:3:7"
                                },
                                "nativeSrc": "2285:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2285:32:7"
                              },
                              "nativeSrc": "2282:52:7",
                              "nodeType": "YulIf",
                              "src": "2282:52:7"
                            },
                            {
                              "nativeSrc": "2343:39:7",
                              "nodeType": "YulAssignment",
                              "src": "2343:39:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2372:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2372:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2353:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2353:18:7"
                                },
                                "nativeSrc": "2353:29:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2353:29:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2343:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2343:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "2202:186:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2238:9:7",
                            "nodeType": "YulTypedName",
                            "src": "2238:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2249:7:7",
                            "nodeType": "YulTypedName",
                            "src": "2249:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2261:6:7",
                            "nodeType": "YulTypedName",
                            "src": "2261:6:7",
                            "type": ""
                          }
                        ],
                        "src": "2202:186:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "2480:173:7",
                          "nodeType": "YulBlock",
                          "src": "2480:173:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2526:16:7",
                                "nodeType": "YulBlock",
                                "src": "2526:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2535:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2535:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2538:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2538:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2528:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2528:6:7"
                                      },
                                      "nativeSrc": "2528:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2528:12:7"
                                    },
                                    "nativeSrc": "2528:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2528:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2501:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2501:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2510:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2510:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2497:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2497:3:7"
                                    },
                                    "nativeSrc": "2497:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2497:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2522:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2522:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2493:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2493:3:7"
                                },
                                "nativeSrc": "2493:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2493:32:7"
                              },
                              "nativeSrc": "2490:52:7",
                              "nodeType": "YulIf",
                              "src": "2490:52:7"
                            },
                            {
                              "nativeSrc": "2551:39:7",
                              "nodeType": "YulAssignment",
                              "src": "2551:39:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2580:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2580:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2561:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2561:18:7"
                                },
                                "nativeSrc": "2561:29:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2561:29:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2551:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2551:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2599:48:7",
                              "nodeType": "YulAssignment",
                              "src": "2599:48:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2632:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2632:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2643:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "2643:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2628:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2628:3:7"
                                    },
                                    "nativeSrc": "2628:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2628:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2609:18:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2609:18:7"
                                },
                                "nativeSrc": "2609:38:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2609:38:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "2599:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2599:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nativeSrc": "2393:260:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2438:9:7",
                            "nodeType": "YulTypedName",
                            "src": "2438:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2449:7:7",
                            "nodeType": "YulTypedName",
                            "src": "2449:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2461:6:7",
                            "nodeType": "YulTypedName",
                            "src": "2461:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "2469:6:7",
                            "nodeType": "YulTypedName",
                            "src": "2469:6:7",
                            "type": ""
                          }
                        ],
                        "src": "2393:260:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "2713:325:7",
                          "nodeType": "YulBlock",
                          "src": "2713:325:7",
                          "statements": [
                            {
                              "nativeSrc": "2723:22:7",
                              "nodeType": "YulAssignment",
                              "src": "2723:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2737:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2737:1:7",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nativeSrc": "2740:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2740:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nativeSrc": "2733:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2733:3:7"
                                },
                                "nativeSrc": "2733:12:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2733:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "2723:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2723:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2754:38:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2754:38:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "2784:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2784:4:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2790:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2790:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "2780:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2780:3:7"
                                },
                                "nativeSrc": "2780:12:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2780:12:7"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "2758:18:7",
                                  "nodeType": "YulTypedName",
                                  "src": "2758:18:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2831:31:7",
                                "nodeType": "YulBlock",
                                "src": "2831:31:7",
                                "statements": [
                                  {
                                    "nativeSrc": "2833:27:7",
                                    "nodeType": "YulAssignment",
                                    "src": "2833:27:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nativeSrc": "2847:6:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "2847:6:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2855:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2855:4:7",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "2843:3:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2843:3:7"
                                      },
                                      "nativeSrc": "2843:17:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2843:17:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "2833:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2833:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "2811:18:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2811:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "2804:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2804:6:7"
                                },
                                "nativeSrc": "2804:26:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2804:26:7"
                              },
                              "nativeSrc": "2801:61:7",
                              "nodeType": "YulIf",
                              "src": "2801:61:7"
                            },
                            {
                              "body": {
                                "nativeSrc": "2921:111:7",
                                "nodeType": "YulBlock",
                                "src": "2921:111:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2942:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2942:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2949:3:7",
                                              "nodeType": "YulLiteral",
                                              "src": "2949:3:7",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2954:10:7",
                                              "nodeType": "YulLiteral",
                                              "src": "2954:10:7",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "2945:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "2945:3:7"
                                          },
                                          "nativeSrc": "2945:20:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2945:20:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "2935:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2935:6:7"
                                      },
                                      "nativeSrc": "2935:31:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2935:31:7"
                                    },
                                    "nativeSrc": "2935:31:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2935:31:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2986:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2986:1:7",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2989:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2989:4:7",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "2979:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2979:6:7"
                                      },
                                      "nativeSrc": "2979:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2979:15:7"
                                    },
                                    "nativeSrc": "2979:15:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2979:15:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3014:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3014:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3017:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3017:4:7",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3007:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3007:6:7"
                                      },
                                      "nativeSrc": "3007:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3007:15:7"
                                    },
                                    "nativeSrc": "3007:15:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3007:15:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "2877:18:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2877:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "2900:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2900:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2908:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "2908:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "2897:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2897:2:7"
                                    },
                                    "nativeSrc": "2897:14:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2897:14:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "2874:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2874:2:7"
                                },
                                "nativeSrc": "2874:38:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2874:38:7"
                              },
                              "nativeSrc": "2871:161:7",
                              "nodeType": "YulIf",
                              "src": "2871:161:7"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nativeSrc": "2658:380:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "2693:4:7",
                            "nodeType": "YulTypedName",
                            "src": "2693:4:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "2702:6:7",
                            "nodeType": "YulTypedName",
                            "src": "2702:6:7",
                            "type": ""
                          }
                        ],
                        "src": "2658:380:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "3200:188:7",
                          "nodeType": "YulBlock",
                          "src": "3200:188:7",
                          "statements": [
                            {
                              "nativeSrc": "3210:26:7",
                              "nodeType": "YulAssignment",
                              "src": "3210:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3222:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3222:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3233:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3233:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3218:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3218:3:7"
                                },
                                "nativeSrc": "3218:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3218:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3210:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3210:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3252:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3252:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "3267:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3267:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3283:3:7",
                                                "nodeType": "YulLiteral",
                                                "src": "3283:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3288:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "3288:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "3279:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3279:3:7"
                                            },
                                            "nativeSrc": "3279:11:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3279:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3292:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "3292:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "3275:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3275:3:7"
                                        },
                                        "nativeSrc": "3275:19:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3275:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3263:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3263:3:7"
                                    },
                                    "nativeSrc": "3263:32:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3263:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3245:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3245:6:7"
                                },
                                "nativeSrc": "3245:51:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3245:51:7"
                              },
                              "nativeSrc": "3245:51:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "3245:51:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3316:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3316:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3327:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "3327:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3312:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3312:3:7"
                                    },
                                    "nativeSrc": "3312:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3312:18:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "3332:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3332:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3305:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3305:6:7"
                                },
                                "nativeSrc": "3305:34:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3305:34:7"
                              },
                              "nativeSrc": "3305:34:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "3305:34:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3359:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3359:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3370:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "3370:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3355:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3355:3:7"
                                    },
                                    "nativeSrc": "3355:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3355:18:7"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "3375:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3375:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3348:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3348:6:7"
                                },
                                "nativeSrc": "3348:34:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3348:34:7"
                              },
                              "nativeSrc": "3348:34:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "3348:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
                        "nativeSrc": "3043:345:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3153:9:7",
                            "nodeType": "YulTypedName",
                            "src": "3153:9:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "3164:6:7",
                            "nodeType": "YulTypedName",
                            "src": "3164:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "3172:6:7",
                            "nodeType": "YulTypedName",
                            "src": "3172:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "3180:6:7",
                            "nodeType": "YulTypedName",
                            "src": "3180:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3191:4:7",
                            "nodeType": "YulTypedName",
                            "src": "3191:4:7",
                            "type": ""
                          }
                        ],
                        "src": "3043:345:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "3494:102:7",
                          "nodeType": "YulBlock",
                          "src": "3494:102:7",
                          "statements": [
                            {
                              "nativeSrc": "3504:26:7",
                              "nodeType": "YulAssignment",
                              "src": "3504:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3516:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3516:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3527:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3527:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3512:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3512:3:7"
                                },
                                "nativeSrc": "3512:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3512:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3504:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3504:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3546:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3546:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "3561:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3561:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3577:3:7",
                                                "nodeType": "YulLiteral",
                                                "src": "3577:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3582:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "3582:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "3573:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "3573:3:7"
                                            },
                                            "nativeSrc": "3573:11:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3573:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3586:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "3586:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "3569:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "3569:3:7"
                                        },
                                        "nativeSrc": "3569:19:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3569:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3557:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3557:3:7"
                                    },
                                    "nativeSrc": "3557:32:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3557:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3539:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3539:6:7"
                                },
                                "nativeSrc": "3539:51:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3539:51:7"
                              },
                              "nativeSrc": "3539:51:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "3539:51:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "3393:203:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3463:9:7",
                            "nodeType": "YulTypedName",
                            "src": "3463:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "3474:6:7",
                            "nodeType": "YulTypedName",
                            "src": "3474:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3485:4:7",
                            "nodeType": "YulTypedName",
                            "src": "3485:4:7",
                            "type": ""
                          }
                        ],
                        "src": "3393:203:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "3649:174:7",
                          "nodeType": "YulBlock",
                          "src": "3649:174:7",
                          "statements": [
                            {
                              "nativeSrc": "3659:16:7",
                              "nodeType": "YulAssignment",
                              "src": "3659:16:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "3670:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3670:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "3673:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3673:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3666:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3666:3:7"
                                },
                                "nativeSrc": "3666:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3666:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "3659:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3659:3:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3706:111:7",
                                "nodeType": "YulBlock",
                                "src": "3706:111:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3727:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3727:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3734:3:7",
                                              "nodeType": "YulLiteral",
                                              "src": "3734:3:7",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3739:10:7",
                                              "nodeType": "YulLiteral",
                                              "src": "3739:10:7",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "3730:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3730:3:7"
                                          },
                                          "nativeSrc": "3730:20:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3730:20:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "3720:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3720:6:7"
                                      },
                                      "nativeSrc": "3720:31:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3720:31:7"
                                    },
                                    "nativeSrc": "3720:31:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3720:31:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3771:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3771:1:7",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3774:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3774:4:7",
                                          "type": "",
                                          "value": "0x11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "3764:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3764:6:7"
                                      },
                                      "nativeSrc": "3764:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3764:15:7"
                                    },
                                    "nativeSrc": "3764:15:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3764:15:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3799:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3799:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3802:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3802:4:7",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3792:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3792:6:7"
                                      },
                                      "nativeSrc": "3792:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3792:15:7"
                                    },
                                    "nativeSrc": "3792:15:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3792:15:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "3690:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3690:1:7"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "3693:3:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3693:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3687:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3687:2:7"
                                },
                                "nativeSrc": "3687:10:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3687:10:7"
                              },
                              "nativeSrc": "3684:133:7",
                              "nodeType": "YulIf",
                              "src": "3684:133:7"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "3601:222:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "3632:1:7",
                            "nodeType": "YulTypedName",
                            "src": "3632:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "3635:1:7",
                            "nodeType": "YulTypedName",
                            "src": "3635:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "3641:3:7",
                            "nodeType": "YulTypedName",
                            "src": "3641:3:7",
                            "type": ""
                          }
                        ],
                        "src": "3601:222:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c806342966c681161007157806342966c681461012357806370a082311461013857806379cc67901461016157806395d89b4114610174578063a9059cbb1461017c578063dd62ed3e1461018f57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c8565b6040516100c39190610605565b60405180910390f35b6100df6100da36600461066f565b61025a565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610699565b610274565b604051601281526020016100c3565b6101366101313660046106d6565b610298565b005b6100f36101463660046106ef565b6001600160a01b031660009081526020819052604090205490565b61013661016f36600461066f565b6102a5565b6100b66102be565b6100df61018a36600461066f565b6102cd565b6100f361019d366004610711565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d790610744565b80601f016020809104026020016040519081016040528092919081815260200182805461020390610744565b80156102505780601f1061022557610100808354040283529160200191610250565b820191906000526020600020905b81548152906001019060200180831161023357829003601f168201915b5050505050905090565b6000336102688185856102db565b60019150505b92915050565b6000336102828582856102ed565b61028d858585610371565b506001949350505050565b6102a233826103d0565b50565b6102b08233836102ed565b6102ba82826103d0565b5050565b6060600480546101d790610744565b600033610268818585610371565b6102e88383836001610406565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561036b578181101561035c57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61036b84848484036000610406565b50505050565b6001600160a01b03831661039b57604051634b637e8f60e11b815260006004820152602401610353565b6001600160a01b0382166103c55760405163ec442f0560e01b815260006004820152602401610353565b6102e88383836104db565b6001600160a01b0382166103fa57604051634b637e8f60e11b815260006004820152602401610353565b6102ba826000836104db565b6001600160a01b0384166104305760405163e602df0560e01b815260006004820152602401610353565b6001600160a01b03831661045a57604051634a1406b160e11b815260006004820152602401610353565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561036b57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104cd91815260200190565b60405180910390a350505050565b6001600160a01b0383166105065780600260008282546104fb919061077e565b909155506105789050565b6001600160a01b038316600090815260208190526040902054818110156105595760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610353565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610594576002805482900390556105b3565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105f891815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156106335760208186018101516040868401015201610616565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461066a57600080fd5b919050565b6000806040838503121561068257600080fd5b61068b83610653565b946020939093013593505050565b6000806000606084860312156106ae57600080fd5b6106b784610653565b92506106c560208501610653565b929592945050506040919091013590565b6000602082840312156106e857600080fd5b5035919050565b60006020828403121561070157600080fd5b61070a82610653565b9392505050565b6000806040838503121561072457600080fd5b61072d83610653565b915061073b60208401610653565b90509250929050565b600181811c9082168061075857607f821691505b60208210810361077857634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026e57634e487b7160e01b600052601160045260246000fdfea264697066735822122071597eab43e05017d3851045d13ae6c98d307a27a3c3b6b618ba6e195882c0f764736f6c634300081b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF3 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2BE JUMP JUMPDEST PUSH2 0xDF PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x711 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D7 SWAP1 PUSH2 0x744 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x203 SWAP1 PUSH2 0x744 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x250 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x225 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x250 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x233 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x268 DUP2 DUP6 DUP6 PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x282 DUP6 DUP3 DUP6 PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x28D DUP6 DUP6 DUP6 PUSH2 0x371 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2A2 CALLER DUP3 PUSH2 0x3D0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B0 DUP3 CALLER DUP4 PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x2BA DUP3 DUP3 PUSH2 0x3D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D7 SWAP1 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x268 DUP2 DUP6 DUP6 PUSH2 0x371 JUMP JUMPDEST PUSH2 0x2E8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x406 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x36B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x35C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x36B DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x406 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x353 JUMP JUMPDEST PUSH2 0x2E8 DUP4 DUP4 DUP4 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x353 JUMP JUMPDEST PUSH2 0x2BA DUP3 PUSH1 0x0 DUP4 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x430 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x36B JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x506 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x578 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x559 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x594 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5F8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x633 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x616 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x68B DUP4 PUSH2 0x653 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B7 DUP5 PUSH2 0x653 JUMP JUMPDEST SWAP3 POP PUSH2 0x6C5 PUSH1 0x20 DUP6 ADD PUSH2 0x653 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x70A DUP3 PUSH2 0x653 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72D DUP4 PUSH2 0x653 JUMP JUMPDEST SWAP2 POP PUSH2 0x73B PUSH1 0x20 DUP5 ADD PUSH2 0x653 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x758 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x778 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x597EAB43E05017D3851045D13AE6C98D307A 0x27 LOG3 0xC3 0xB6 0xB6 XOR 0xBA PUSH15 0x195882C0F764736F6C634300081B00 CALLER ",
              "sourceMap": "372:1031:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;:::i;:::-;;:::i;:::-;;;1194:14:7;;1187:22;1169:41;;1157:2;1142:18;3979:186:1;1029:187:7;2830:97:1;2908:12;;2830:97;;;1367:25:7;;;1355:2;1340:18;2830:97:1;1221:177:7;4757:244:1;;;;;;:::i;:::-;;:::i;2688:82::-;;;2761:2;1924:36:7;;1912:2;1897:18;2688:82:1;1782:184:7;618:87:3;;;;;;:::i;:::-;;:::i;:::-;;2985:116:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:1;3050:7;3076:18;;;;;;;;;;;;2985:116;1021:158:3;;;;;;:::i;:::-;;:::i;1962:93:1:-;;;:::i;3296:178::-;;;;;;:::i;:::-;;:::i;3532:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:1;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;1760:89;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:5;4106:31:1;735:10:5;4122:7:1;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:5;4900:37:1;4916:4;735:10:5;4931:5:1;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:1;;4757:244;-1:-1:-1;;;;4757:244:1:o;618:87:3:-;672:26;735:10:5;692:5:3;672;:26::i;:::-;618:87;:::o;1021:158::-;1096:45;1112:7;735:10:5;1135:5:3;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;1962:93:1:-;2009:13;2041:7;2034:14;;;;;:::i;3296:178::-;3365:4;735:10:5;3419:27:1;735:10:5;3436:2:1;3440:5;3419:9;:27::i;8707:128::-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;-1:-1:-1;;;;;3638:18:1;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:1;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:1;;-1:-1:-1;;;;;3263:32:7;;10668:60:1;;;3245:51:7;3312:18;;;3305:34;;;3355:18;;;3348:34;;;3218:18;;10668:60:1;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10485:387;10396:476;;;:::o;5374:300::-;-1:-1:-1;;;;;5457:18:1;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:1;;5525:1;5498:30;;;3539:51:7;3512:18;;5498:30:1;3393:203:7;5453:86:1;-1:-1:-1;;;;;5552:16:1;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:1;;5620:1;5591:32;;;3539:51:7;3512:18;;5591:32:1;3393:203:7;5548:86:1;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;7965:206::-;-1:-1:-1;;;;;8035:21:1;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:1;;8106:1;8079:30;;;3539:51:7;3512:18;;8079:30:1;3393:203:7;8031:89:1;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;9682:432::-;-1:-1:-1;;;;;9794:19:1;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:1;;9865:1;9836:32;;;3539:51:7;3512:18;;9836:32:1;3393:203:7;9790:89:1;-1:-1:-1;;;;;9892:21:1;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:1;;9964:1;9936:31;;;3539:51:7;3512:18;;9936:31:1;3393:203:7;9888:90:1;-1:-1:-1;;;;;9987:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:1;10075:5;-1:-1:-1;;;;;10066:31:1;;10091:5;10066:31;;;;1367:25:7;;1355:2;1340:18;;1221:177;10066:31:1;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:1;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:1;;-1:-1:-1;6074:540:1;;-1:-1:-1;;;;;6288:15:1;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:1;;-1:-1:-1;;;;;3263:32:7;;6367:50:1;;;3245:51:7;3312:18;;;3305:34;;;3355:18;;;3348:34;;;3218:18;;6367:50:1;3043:345:7;6317:115:1;-1:-1:-1;;;;;6552:15:1;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:1;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:1;7073:4;-1:-1:-1;;;;;7064:25:1;;7083:5;7064:25;;;;1367::7;;1355:2;1340:18;;1221:177;7064:25:1;;;;;;;;5989:1107;;;:::o;14:527:7:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;263:1;273:140;287:6;284:1;281:13;273:140;;;398:2;382:14;;;378:23;;372:30;367:2;348:17;;;344:26;337:66;302:10;273:140;;;277:3;462:1;457:2;448:6;437:9;433:22;429:31;422:42;532:2;525;521:7;516:2;508:6;504:15;500:29;489:9;485:45;481:54;473:62;;;14:527;;;;:::o;546:173::-;614:20;;-1:-1:-1;;;;;663:31:7;;653:42;;643:70;;709:1;706;699:12;643:70;546:173;;;:::o;724:300::-;792:6;800;853:2;841:9;832:7;828:23;824:32;821:52;;;869:1;866;859:12;821:52;892:29;911:9;892:29;:::i;:::-;882:39;990:2;975:18;;;;962:32;;-1:-1:-1;;;724:300:7:o;1403:374::-;1480:6;1488;1496;1549:2;1537:9;1528:7;1524:23;1520:32;1517:52;;;1565:1;1562;1555:12;1517:52;1588:29;1607:9;1588:29;:::i;:::-;1578:39;;1636:38;1670:2;1659:9;1655:18;1636:38;:::i;:::-;1403:374;;1626:48;;-1:-1:-1;;;1743:2:7;1728:18;;;;1715:32;;1403:374::o;1971:226::-;2030:6;2083:2;2071:9;2062:7;2058:23;2054:32;2051:52;;;2099:1;2096;2089:12;2051:52;-1:-1:-1;2144:23:7;;1971:226;-1:-1:-1;1971:226:7:o;2202:186::-;2261:6;2314:2;2302:9;2293:7;2289:23;2285:32;2282:52;;;2330:1;2327;2320:12;2282:52;2353:29;2372:9;2353:29;:::i;:::-;2343:39;2202:186;-1:-1:-1;;;2202:186:7:o;2393:260::-;2461:6;2469;2522:2;2510:9;2501:7;2497:23;2493:32;2490:52;;;2538:1;2535;2528:12;2490:52;2561:29;2580:9;2561:29;:::i;:::-;2551:39;;2609:38;2643:2;2632:9;2628:18;2609:38;:::i;:::-;2599:48;;2393:260;;;;;:::o;2658:380::-;2737:1;2733:12;;;;2780;;;2801:61;;2855:4;2847:6;2843:17;2833:27;;2801:61;2908:2;2900:6;2897:14;2877:18;2874:38;2871:161;;2954:10;2949:3;2945:20;2942:1;2935:31;2989:4;2986:1;2979:15;3017:4;3014:1;3007:15;2871:161;;2658:380;;;:::o;3601:222::-;3666:9;;;3687:10;;;3684:133;;;3739:10;3734:3;3730:20;3727:1;3720:31;3774:4;3771:1;3764:15;3802:4;3799:1;3792:15"
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@Open.example.com\",\"details\":\"Implementation of the Open Token with burning capability\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"constructor\":{\"details\":\"Sets the total supply to 1 billion tokens, all assigned to the deployer\",\"params\":{\"recipient\":\"The address that will receive the minted tokens\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"stateVariables\":{\"NAME\":{\"details\":\"ERC20 function name() public view returns (string)Field is declared public: getter name() is created when compiled,      it returns the name of the token.\"},\"SYMBOL\":{\"details\":\"ERC20 function symbol() public view returns (string)Field is declared public: getter symbol() is created when compiled,      it returns the symbol of the token\"}},\"title\":\"Open Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Creates `amount` tokens and assigns them to `recipient`, increasing the total supply\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OpenLedger.sol\":\"Open\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/OpenLedger.sol\":{\"keccak256\":\"0xbbfcd652f7d2bd7e9197f17055f7779483b0c8cacf2bd26795697f6ff71f019c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae9d7f332dca6ae9af93b6372dcbade818aeff621783e1d4658c093688b1d2d\",\"dweb:/ipfs/QmVhXe5DJwcKzvFmTsWLmBi3yXmVkxJFThJeowgcYBCSwY\"]}},\"version\":1}"
        }
      }
    }
  }
}